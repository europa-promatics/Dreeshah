/// <reference types="googlemaps" />
import { NgZone } from '@angular/core';
import { Observable } from 'rxjs';
import { AgmRectangle } from '../../directives/rectangle';
import { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';
import * as ɵngcc0 from '@angular/core';
export declare class RectangleManager {
    private _apiWrapper;
    private _zone;
    private _rectangles;
    constructor(_apiWrapper: GoogleMapsAPIWrapper, _zone: NgZone);
    addRectangle(rectangle: AgmRectangle): void;
    /**
     * Removes the given rectangle from the map.
     */
    removeRectangle(rectangle: AgmRectangle): Promise<void>;
    setOptions(rectangle: AgmRectangle, options: google.maps.RectangleOptions): Promise<void>;
    getBounds(rectangle: AgmRectangle): Promise<google.maps.LatLngBounds>;
    setBounds(rectangle: AgmRectangle): Promise<void>;
    setEditable(rectangle: AgmRectangle): Promise<void>;
    setDraggable(rectangle: AgmRectangle): Promise<void>;
    setVisible(rectangle: AgmRectangle): Promise<void>;
    createEventObservable<T>(eventName: string, rectangle: AgmRectangle): Observable<T>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RectangleManager>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<RectangleManager>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVjdGFuZ2xlLW1hbmFnZXIuZC50cyIsInNvdXJjZXMiOlsicmVjdGFuZ2xlLW1hbmFnZXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSB0eXBlcz1cImdvb2dsZW1hcHNcIiAvPlxuaW1wb3J0IHsgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBBZ21SZWN0YW5nbGUgfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzL3JlY3RhbmdsZSc7XG5pbXBvcnQgeyBHb29nbGVNYXBzQVBJV3JhcHBlciB9IGZyb20gJy4uL2dvb2dsZS1tYXBzLWFwaS13cmFwcGVyJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFJlY3RhbmdsZU1hbmFnZXIge1xuICAgIHByaXZhdGUgX2FwaVdyYXBwZXI7XG4gICAgcHJpdmF0ZSBfem9uZTtcbiAgICBwcml2YXRlIF9yZWN0YW5nbGVzO1xuICAgIGNvbnN0cnVjdG9yKF9hcGlXcmFwcGVyOiBHb29nbGVNYXBzQVBJV3JhcHBlciwgX3pvbmU6IE5nWm9uZSk7XG4gICAgYWRkUmVjdGFuZ2xlKHJlY3RhbmdsZTogQWdtUmVjdGFuZ2xlKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIHRoZSBnaXZlbiByZWN0YW5nbGUgZnJvbSB0aGUgbWFwLlxuICAgICAqL1xuICAgIHJlbW92ZVJlY3RhbmdsZShyZWN0YW5nbGU6IEFnbVJlY3RhbmdsZSk6IFByb21pc2U8dm9pZD47XG4gICAgc2V0T3B0aW9ucyhyZWN0YW5nbGU6IEFnbVJlY3RhbmdsZSwgb3B0aW9uczogZ29vZ2xlLm1hcHMuUmVjdGFuZ2xlT3B0aW9ucyk6IFByb21pc2U8dm9pZD47XG4gICAgZ2V0Qm91bmRzKHJlY3RhbmdsZTogQWdtUmVjdGFuZ2xlKTogUHJvbWlzZTxnb29nbGUubWFwcy5MYXRMbmdCb3VuZHM+O1xuICAgIHNldEJvdW5kcyhyZWN0YW5nbGU6IEFnbVJlY3RhbmdsZSk6IFByb21pc2U8dm9pZD47XG4gICAgc2V0RWRpdGFibGUocmVjdGFuZ2xlOiBBZ21SZWN0YW5nbGUpOiBQcm9taXNlPHZvaWQ+O1xuICAgIHNldERyYWdnYWJsZShyZWN0YW5nbGU6IEFnbVJlY3RhbmdsZSk6IFByb21pc2U8dm9pZD47XG4gICAgc2V0VmlzaWJsZShyZWN0YW5nbGU6IEFnbVJlY3RhbmdsZSk6IFByb21pc2U8dm9pZD47XG4gICAgY3JlYXRlRXZlbnRPYnNlcnZhYmxlPFQ+KGV2ZW50TmFtZTogc3RyaW5nLCByZWN0YW5nbGU6IEFnbVJlY3RhbmdsZSk6IE9ic2VydmFibGU8VD47XG59XG4iXX0=