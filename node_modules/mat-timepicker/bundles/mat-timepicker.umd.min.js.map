{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/mat-timepicker/src/lib/util.ts","../../../projects/mat-timepicker/src/lib/timepicker-dialog/timepicker-dialog.component.ts","../../../projects/mat-timepicker/src/lib/timepicker.directive.ts","../../../projects/mat-timepicker/src/lib/clock/clock.component.ts","../../../projects/mat-timepicker/src/lib/mat-timepicker.module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","twoDigits","convertHoursForMode","hour","mode","isPm","isDateInRange","minDate","maxDate","current","unixCurrentDate","isAllowed","minutes","clockMode","selectedMeridiem","checkDate","Date","setHours","setMinutes","setSeconds","setMilliseconds","MatTimepickerComponentDialogComponent","data","_this","this","changeEvent","EventEmitter","okClickEvent","cancelClickEvent","allowed24HourMap","allowed12HourMap","invalidSelection","viewType","skipMinuteAutoSwitch","autoSwitchID","invalidMedianID","hasInvalidMeridiem","editHoursClicked","isClosing","okClickHandler","emit","cancelClickHandler","bindData","defineProperty","prototype","_value","hours","getHours","getMinutes","_hours","_formattedHour","okLabel","cancelLabel","okButtonTemplate","cancelButtonTemplate","anteMeridiemAbbreviation","postMeridiemAbbreviation","color","ngDoCheck","handleClockChange","_a","type","is24hoursAutoMeridiemChange","newValue","clearInvalidMeridiem","handleUnavailableSelection","clearTimeout","handleClockChangeDone","preventDefault","setTimeout","editMinutes","editHours","invalidSelectionHandler","invalidMeridiem","meridiemChange","changeData","setAm","setPm","Component","args","selector","template","Inject","MAT_DIALOG_DATA","Output","MatTimepickerDirective","ngControl","dialog","renderer","zone","fm","elRef","ngZone","_platform","_parentForm","_matFormFiled","_parentFormGroup","_defaultErrorStateMatcher","_errorState","_disabled","_readonly","isAlive","Subject","stateChanges","_uid","nextId","describedBy","_required","focused","isInputFocused","disableDialogOpenOnClick","strict","controlType","listeners","_skipValueChangeEmission","combination","timeChange","invalidInput","clickHandler","modalRef","componentInstance","disabled","showDialog","handleChange","v","getTime","currentValue","handleOk","onChangeFn","close","handleCancel","id","errorStateMatcher","valueAccessor","IOS","runOutsideAngular","nativeElement","addEventListener","event","el","target","selectionStart","selectionEnd","setSelectionRange","_isServer","isBrowser","oldState","parent","control","newState","isErrorState","coerceBooleanProperty","_id","empty","req","_placeholder","plh","_formattedValueString","setInputElementValue","_isPm","formattedValueString","inputHandler","length","writeValue","meridiemResult","match","meridiem","replace","valueHasColumn","includes","_c","split","filter","test","_b","isNaN","toLowerCase","d","keydownHandler","metaKey","ctrlKey","altKey","concat","code","key","tValue","slice","pattern","stopImmediatePropagation","keyupHandler","focusHandler","focusoutHandler","onTouchedFn","setDescribedByIds","ids","join","onContainerClick","tagName","focus","Promise","resolve","then","setProperty","validate","undefined","newMinDate","newMaxDate","newCurrent","isTimeInRange","dateRange","ngAfterViewInit","listen","_elementRef","ngOnInit","monitor","subscribe","origin","hasMaxDate","hasMinDate","generateAllowedMap","_rawValidators","find","setValidators","updateValueAndValidity","isStrictMode","h","hourMap","currentDate","am","pm","ngOnChanges","simpleChanges","isFirstChange","previousValue","disableLimitBase","checkValidity","isInnerCall","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","open","autoFocus","instance","pipe","takeUntil","beforeClosed","first","afterClosed","ngOnDestroy","complete","stopMonitoring","forEach","l","Directive","providers","provide","MatFormFieldControl","useExisting","host","class","[class.mat-input-server]","[attr.id]","[attr.placeholder]","[disabled]","[required]","[attr.readonly]","[attr.aria-invalid]","[attr.aria-required]","exportAs","NgControl","decorators","Optional","Self","MatDialog","Renderer2","NgZone","FocusMonitor","ElementRef","Platform","NgForm","MatFormField","FormGroupDirective","ErrorStateMatcher","Input","HostBinding","HostListener","ClockComponent","unavailableSelection","isFormattedValueAllowed","touching","numbers","secondaryNumbers","minuteDots","invalidMeridiemEmitted","handleTouchMove","rect","getBoundingClientRect","movePointer","changedTouches","clientX","left","clientY","top","initIsAllowedFn","isAvailableFn","isHourCheck","values","isAvailable","formattedHours","firstChange","calculateAngule","setNumbers","formattedValue","isSelectedTimeAvailable","angle","getPointerAngle","meridiem_1","isAllowedFn","num","getNumbers","size","start","meridiem_2","isAllowedFn_1","step","map","digit","display","allowed","disableAnimatedPointer","enableAnimatedPointer","handleTouchEnd","handleMouseMove","buttons","which","handleClick","x","y","getPointerValue","count","Array","apply","_","translateX","Math","cos","PI","translateY","sin","atan2","round","radius","sqrt","pow","changeDetection","ChangeDetectionStrategy","OnPush","NgModule","declarations","imports","CommonModule","MatDialogModule","MatButtonModule","MatToolbarModule","MatIconModule","MatInputModule","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ITimeData, ClockViewType, ClockMode } from './interfaces-and-types';\n\nexport function twoDigits(n) {\n  return n < 10 ? `0${n}` : `${n}`;\n}\n\nexport function addDays(date: Date, days: number) {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\nexport function convertHoursForMode(hour: number, mode: ClockMode) {\n  const isPm = hour >= 12;\n  if (mode === '24h') {\n    return { hour, isPm };\n  } else if (hour === 0 || hour === 12) {\n    return { hour: 12, isPm };\n  } else if (hour < 12) {\n    return { hour, isPm };\n  }\n  return { hour: hour - 12, isPm };\n}\n\nfunction mod(a, b) {\n  return a - Math.floor(a / b) * b;\n}\n\nexport function getShortestAngle(from, to) {\n  const difference = to - from;\n  return from + mod(difference + 180, 360) - 180;\n}\n\nexport function isDateInRange(minDate: Date, maxDate: Date, current: Date) {\n  const unixCurrentDate = +current;\n  return (!minDate || +minDate <= unixCurrentDate) && (!maxDate || unixCurrentDate <= +maxDate);\n}\n\nexport function isTimeInRange(minDate: Date, maxDate: Date, current: Date) {\n  if (minDate instanceof Date) {\n    const newMinDate = new Date();\n    newMinDate.setHours(minDate.getHours());\n    newMinDate.setMinutes(minDate.getMinutes());\n    newMinDate.setSeconds(0);\n    newMinDate.setMilliseconds(0);\n    minDate = newMinDate;\n  }\n  if (maxDate instanceof Date) {\n    const newMaxDate = new Date();\n    newMaxDate.setHours(maxDate.getHours());\n    newMaxDate.setMinutes(maxDate.getMinutes());\n    newMaxDate.setSeconds(0);\n    newMaxDate.setMilliseconds(0);\n    maxDate = newMaxDate;\n  }\n  if (current instanceof Date) {\n    const newCurrent = new Date();\n    newCurrent.setHours(current.getHours());\n    newCurrent.setMinutes(current.getMinutes());\n    newCurrent.setSeconds(0);\n    newCurrent.setMilliseconds(0);\n    current = newCurrent;\n  }\n  const unixCurrentDate = +current;\n  return (!minDate || +minDate <= unixCurrentDate) && (!maxDate || unixCurrentDate <= +maxDate);\n}\n\n// used when generating the allowed maps\n\nexport function isAllowed(\n  hour: number,\n  minutes: number,\n  minDate: Date,\n  maxDate: Date,\n  clockMode: ClockMode,\n  selectedMeridiem?: 'AM' | 'PM'\n) {\n  if (hour > 24 || hour < 0 || minutes > 60 || minutes < 0) { return false; }\n\n  if (!minDate && !maxDate) { return true; }\n\n  if (clockMode === '12h') {\n    if (hour === 12 && selectedMeridiem === 'AM') { hour = 0; }\n    if (hour > 12) { hour -= 12; }\n  }\n  const checkDate = new Date();\n\n  checkDate.setHours(hour);\n  checkDate.setMinutes(minutes);\n  checkDate.setSeconds(0);\n  checkDate.setMilliseconds(0);\n\n  return isDateInRange(minDate, maxDate, checkDate);\n}\n\n// used by the clock component to visually disable the not allowed values\n\nexport function getIsAvailabeFn(allowed12HourMap, allowed24HourMap, mode: ClockMode) {\n  return (value: number, viewType: ClockViewType, isPm: boolean, h?: number) => {\n    const isHourCheck = viewType === 'hours';\n    const [hour, minutes] = isHourCheck ? [value, null] : [h, value];\n\n    if (mode === '12h') {\n      if (!allowed12HourMap) { return true; }\n      const meridiem = isPm ? 'pm' : 'am';\n      if (isHourCheck) {\n        return !!Object.values(allowed12HourMap[meridiem][hour]).find(v => v === true);\n      }\n      return allowed12HourMap[meridiem][hour][minutes];\n    }\n\n    if (!allowed24HourMap) { return true; }\n\n    if (isHourCheck) {\n      return !!Object.values(allowed24HourMap[hour]).find(v => v === true);\n    }\n    return allowed24HourMap[hour][minutes];\n  };\n}\n","import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Component, EventEmitter, Output, Inject, DoCheck, TemplateRef } from '@angular/core';\nimport { ClockViewType, ClockMode, IAllowed24HourMap, IAllowed12HourMap } from '../interfaces-and-types';\nimport { twoDigits, convertHoursForMode } from '../util';\nimport { MatTimepickerButtonTemplateContext } from '../timepicker.directive';\n\n@Component({\n  selector: 'mat-timepicker-dialog',\n  templateUrl: './timepicker-dialog.component.html',\n  styleUrls: ['./timepicker-dialog.component.scss']\n})\nexport class MatTimepickerComponentDialogComponent implements DoCheck {\n\n  twoDigits = twoDigits;\n\n  @Output() changeEvent: EventEmitter<any> = new EventEmitter<any>();\n  @Output() okClickEvent: EventEmitter<any> = new EventEmitter<Date>();\n  @Output() cancelClickEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  allowed24HourMap: IAllowed24HourMap = null;\n  allowed12HourMap: IAllowed12HourMap = null;\n\n  invalidSelection = false;\n\n  okLabel: string;\n  cancelLabel: string;\n\n  okButtonTemplate: TemplateRef<MatTimepickerButtonTemplateContext>;\n  cancelButtonTemplate: TemplateRef<MatTimepickerButtonTemplateContext>;\n\n  anteMeridiemAbbreviation: string;\n  postMeridiemAbbreviation: string;\n\n  set value(value: any) {\n    value = value || this.minDate || this.maxDate || new Date();\n    this.hours = value.getHours();\n    this.minutes = value.getMinutes();\n    this._value = value;\n  }\n\n  get value() { return this._value; }\n\n  mode: ClockMode;\n  viewType: ClockViewType = 'hours';\n\n  minutes: any;\n  color: string;\n  isPm = false;\n  skipMinuteAutoSwitch = false;\n  autoSwitchID = null;\n  invalidMedianID = null;\n  hasInvalidMeridiem = false;\n  editHoursClicked = false;\n  isClosing = false;\n\n  minDate: Date;\n  maxDate: Date;\n\n  // tslint:disable-next-line:variable-name\n  _formattedHour: any;\n  // tslint:disable-next-line:variable-name\n  _hours: any;\n  // tslint:disable-next-line:variable-name\n  _value: Date;\n\n  set hours(value: any) {\n    this._hours = value;\n    this._formattedHour = convertHoursForMode(this.hours, this.mode).hour;\n  }\n  get hours() { return this._hours; }\n\n  get formattedHours() { return this._formattedHour; }\n\n  bindData(data: any) {\n    this.mode = data.mode;\n    this.okLabel = data.okLabel;\n    this.cancelLabel = data.cancelLabel;\n    this.okButtonTemplate = data.okButtonTemplate;\n    this.cancelButtonTemplate = data.cancelButtonTemplate;\n    this.anteMeridiemAbbreviation = data.anteMeridiemAbbreviation;\n    this.postMeridiemAbbreviation = data.postMeridiemAbbreviation;\n    this.color = data.color;\n    this.minDate = data.minDate;\n    this.maxDate = data.maxDate;\n    this.allowed12HourMap = data.allowed12HourMap;\n    this.allowed24HourMap = data.allowed24HourMap;\n  }\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data) {\n    this.isPm = data.isPm;\n    this.bindData(data);\n    // keep this always at the bottom\n    this.value = data.value;\n  }\n\n  ngDoCheck() { this.bindData(this.data); }\n\n  handleClockChange({ value, type }: { value: number, type: 'minutes' | 'hours' }) {\n    const is24hoursAutoMeridiemChange = this.mode === '24h' && type === 'hours' && (\n      (this.hours >= 12 && value < 12) || (this.hours < 12 && value >= 12));\n    if ((this.hasInvalidMeridiem && this.mode === '12h') || is24hoursAutoMeridiemChange) {\n      this.isPm = !this.isPm;\n      this.hasInvalidMeridiem = false;\n    }\n\n    if ((type && type === 'hours') || (!type && this.viewType === 'hours')) {\n      this.hours = value;\n    } else if ((type && type === 'minutes') || (!type && this.viewType === 'minutes')) {\n      this.minutes = value;\n    }\n\n    const newValue = new Date();\n    const hours = this.isPm ? this.hours < 12 ? this.hours + 12 : this.hours : this.hours === 12 ? 0 : this.hours;\n    newValue.setHours(hours);\n    newValue.setMinutes(this.minutes);\n    newValue.setSeconds(0);\n    newValue.setMilliseconds(0);\n    this.value = newValue;\n    this.changeEvent.emit(newValue);\n  }\n\n  clearInvalidMeridiem() {\n    this.hasInvalidMeridiem = false;\n  }\n\n  handleUnavailableSelection() {\n    clearTimeout(this.autoSwitchID);\n  }\n\n  handleClockChangeDone(e) {\n    e.preventDefault(); // prevent mouseUp after touchEnd\n\n    if (this.viewType === 'hours' && !this.skipMinuteAutoSwitch) {\n      this.autoSwitchID = setTimeout(() => {\n        this.editMinutes();\n        this.autoSwitchID = null;\n      }, 300);\n    }\n  }\n\n  editHours() {\n    this.viewType = 'hours';\n    this.editHoursClicked = true;\n    setTimeout(() => { this.editHoursClicked = false; }, 0);\n  }\n\n  editMinutes() {\n    if (this.hasInvalidMeridiem) {\n      this.isPm = !this.isPm;\n      this.hasInvalidMeridiem = false;\n    }\n    this.viewType = 'minutes';\n  }\n\n  invalidSelectionHandler(value) {\n    this.invalidSelection = value;\n  }\n\n\n  invalidMeridiem() {\n    if (this.viewType !== 'minutes' && this.editHoursClicked) {\n      if (this.invalidMedianID) { return; }\n      this.invalidMedianID = setTimeout(() => {\n        this.isPm = !this.isPm;\n        this.hasInvalidMeridiem = false;\n      }, 0);\n      return;\n    }\n    this.hasInvalidMeridiem = true;\n  }\n\n  meridiemChange(hours) {\n    const changeData = {\n      type: this.viewType,\n      value: this.viewType === 'hours' ? hours : this.value.getMinutes()\n    };\n    this.handleClockChange(changeData);\n  }\n\n\n  setAm() {\n    if (this.hours >= 12) {\n      this.hours = this.hours - 12;\n    }\n    this.isPm = false;\n\n    this.meridiemChange(this.hours);\n  }\n\n  setPm() {\n    if (this.hours < 12) {\n      this.hours = this.hours + 12;\n    }\n    this.isPm = true;\n    this.meridiemChange(this.hours);\n  }\n\n  okClickHandler = () => {\n    if (this.hasInvalidMeridiem) {\n      this.isPm = !this.isPm;\n      this.hasInvalidMeridiem = false;\n    }\n    this.okClickEvent.emit(this.value);\n  }\n\n  cancelClickHandler = () => {\n    this.cancelClickEvent.emit();\n  }\n\n}\n","import { ControlValueAccessor, NgForm, NgControl, FormGroupDirective, FormControl } from '@angular/forms';\nimport {\n  Directive,\n  OnInit,\n  EventEmitter,\n  Input,\n  ElementRef,\n  OnChanges,\n  Renderer2,\n  AfterViewInit,\n  OnDestroy,\n  Optional,\n  SimpleChanges,\n  NgZone,\n  HostBinding,\n  Self,\n  Output,\n  HostListener,\n  TemplateRef\n} from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldControl, MatFormField } from '@angular/material/form-field';\nimport { ClockMode, IAllowed24HourMap, IAllowed12HourMap } from './interfaces-and-types';\nimport { twoDigits, convertHoursForMode, isAllowed, isDateInRange, isTimeInRange } from './util';\nimport { MatTimepickerComponentDialogComponent } from './timepicker-dialog/timepicker-dialog.component';\nimport { Subject } from 'rxjs';\nimport { takeUntil, first } from 'rxjs/operators';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\n\nexport interface MatTimepickerButtonTemplateContext {\n  $implicit: () => void;\n  label: string;\n}\n\n@Directive({\n  selector: 'input[matTimepicker]',\n  providers: [\n    { provide: MatFormFieldControl, useExisting: MatTimepickerDirective }\n  ],\n  // tslint:disable-next-line:no-host-metadata-property\n  host: {\n    /**\n     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n     */\n    // tslint:disable-next-line:object-literal-key-quotes\n    'class': 'mat-input-element mat-form-field-autofill-control',\n    '[class.mat-input-server]': '_isServer',\n    // Native input properties that are overwritten by Angular inputs need to be synced with\n    // the native input element. Otherwise property bindings for those don't work.\n    '[attr.id]': 'id',\n    '[attr.placeholder]': 'placeholder',\n    '[disabled]': 'disabled',\n    '[required]': 'required',\n    '[attr.readonly]': 'readonly || null',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-required]': 'required.toString()',\n  },\n  exportAs: 'matTimepicker'\n})\nexport class MatTimepickerDirective implements\n  OnInit,\n  OnChanges,\n  AfterViewInit,\n  OnDestroy,\n  ControlValueAccessor,\n  MatFormFieldControl<any>\n{\n  static nextId = 0;\n\n  /** Whether the component is being rendered on the server. */\n  // tslint:disable-next-line:variable-name\n  readonly _isServer: boolean;\n\n  // tslint:disable-next-line:variable-name\n  _errorState = false;\n  get errorState() {\n    const oldState = this._errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = this.errorStateMatcher ? this.errorStateMatcher.isErrorState(control, parent) : oldState;\n\n    if (newState !== oldState) {\n      this._errorState = newState;\n      this.stateChanges.next();\n    }\n\n    return newState;\n  }\n\n  @Input()\n  get disabled(): boolean {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // Browsers may not fire the blur event if the input is disabled too quickly.\n    // Reset from here to ensure that the element doesn't become stuck.\n    if (this.focused) {\n      this.focused = false;\n      this.stateChanges.next();\n    }\n  }\n  // tslint:disable-next-line:variable-name\n  protected _disabled = false;\n\n  @Input() get id(): string { return this._id; }\n  set id(value: string) { this._id = value || this._uid; }\n  // tslint:disable-next-line:variable-name\n  protected _id: string;\n\n  @Input() get readonly(): boolean { return this._readonly; }\n  set readonly(value: boolean) { this._readonly = coerceBooleanProperty(value); }\n  // tslint:disable-next-line:variable-name\n  private _readonly = false;\n\n  private isAlive: Subject<any> = new Subject<any>();\n  stateChanges = new Subject<void>();\n\n  // tslint:disable-next-line:variable-name\n  protected _uid = `mat-input-${MatTimepickerDirective.nextId++}`;\n  @HostBinding('class.floating') get shouldLabelFloat() { return this.focused || !this.empty; }\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  @Input() get required() {\n    return this._required;\n  }\n\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n  // tslint:disable-next-line:variable-name\n  private _required = false;\n\n  @Input() get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  // tslint:disable-next-line:variable-name\n  private _placeholder: string;\n\n  focused = false;\n  private pattern: RegExp;\n\n  private allowed24HourMap: IAllowed24HourMap = null;\n  private allowed12HourMap: IAllowed12HourMap = null;\n\n  private isInputFocused = false;\n\n  /* Use a custom template for the ok button */\n  @Input() okButtonTemplate: TemplateRef<MatTimepickerButtonTemplateContext> | null = null;\n  /* Use a custom template for the cancel button */\n  @Input() cancelButtonTemplate: TemplateRef<MatTimepickerButtonTemplateContext> | null = null;\n\n  /** Override the label of the ok button. */\n  @Input() okLabel = 'Ok';\n  /** Override the label of the cancel button. */\n  @Input() cancelLabel = 'Cancel';\n  /** Override the ante meridiem abbreviation. */\n  @Input() anteMeridiemAbbreviation = 'am';\n  /** Override the post meridiem abbreviation. */\n  @Input() postMeridiemAbbreviation = 'pm';\n\n  /** Sets the clock mode, 12-hour or 24-hour clocks are supported. */\n  @Input() mode: ClockMode = '24h';\n  @Input() color = 'primary';\n  @Input() disableDialogOpenOnClick = false;\n  @Input() strict = true;\n\n  controlType = 'angular-material-timepicker';\n\n  private listeners: (() => void)[] = [];\n\n  @Input() minDate: Date;\n  @Input() maxDate: Date;\n\n  // tslint:disable-next-line:variable-name\n  private _isPm: boolean;\n  // tslint:disable-next-line:variable-name\n  private _value: Date;\n  // tslint:disable-next-line:variable-name\n  private _formattedValueString: string;\n\n  // tslint:disable-next-line:variable-name\n  private _skipValueChangeEmission = true;\n\n  @Input() set value(value: Date) {\n    if (value === this._value) { return; }\n    this._value = value;\n    if (!value) {\n      this._formattedValueString = null;\n      this.setInputElementValue('');\n      this.currentValue = value;\n      return;\n    }\n\n    const { hour, isPm } = convertHoursForMode(value.getHours(), this.mode);\n    this._isPm = isPm;\n    this._formattedValueString = this.mode === '12h' ?\n      `${hour}:${twoDigits(value.getMinutes())} ${isPm ? this.postMeridiemAbbreviation : this.anteMeridiemAbbreviation}` :\n      `${twoDigits(value.getHours())}:${twoDigits(value.getMinutes())}`;\n\n    if (!this.isInputFocused) { this.setInputElementValue(this.formattedValueString); }\n    this.currentValue = value;\n    this.stateChanges.next();\n\n    if (this._skipValueChangeEmission) { return; }\n    this.timeChange.emit(this.currentValue);\n  }\n\n  get value() { return this._value; }\n\n  get isPm() { return this._isPm; }\n\n  get empty() {\n    return !(this.currentValue instanceof Date);\n  }\n\n  private get formattedValueString() { return this._formattedValueString; }\n\n  private currentValue: Date;\n  private modalRef: MatDialogRef<MatTimepickerComponentDialogComponent>;\n\n  private onChangeFn: any;\n  private onTouchedFn: any;\n  private combination: string[] = [];\n\n  @Output() timeChange: EventEmitter<any> = new EventEmitter<any>();\n  @Output() invalidInput: EventEmitter<any> = new EventEmitter<any>();\n\n  @HostListener('input') inputHandler() {\n    let value = (this.elRef.nativeElement as any).value as string;\n    const length = value.length;\n    if (length === 0) {\n      this.writeValue(null, true);\n      if (this.onChangeFn) { this.onChangeFn(null); }\n      return;\n    }\n\n    const meridiemResult = value.match(/am|pm/i);\n    let meridiem: string | null = null;\n    if (meridiemResult) {\n      value = value.replace(meridiemResult[0], '');\n      [meridiem] = meridiemResult;\n    }\n    const valueHasColumn = value.includes(':');\n    let [hours, minutes]: any = length === 1 ? [value, 0] :\n      length === 2 && !valueHasColumn ? [value, 0] : valueHasColumn ? value.split(':') : value.split(/(\\d\\d)/).filter(v => v);\n\n    hours = +hours;\n\n    if (/\\s/.test(minutes)) {\n      let other;\n      [minutes, other] = minutes.split(/\\s/);\n      if (other === 'pm' && !isNaN(hours) && hours < 12) { hours += 12; }\n    }\n\n    minutes = +minutes;\n\n    if (isNaN(hours) || isNaN(minutes)) {\n      this.writeValue(null, true); return;\n    }\n\n    if (hours < 12 && meridiem && meridiem.toLowerCase() === 'pm') {\n      hours += 12;\n    } else if (hours > 12 && meridiem && meridiem.toLowerCase() === 'am') {\n      hours -= 12;\n    }\n\n    if (this.mode === '12h' && +hours < 1) {\n      hours = '1';\n    } else {\n      if (+hours > 24) {\n        hours = '24';\n      } else if (+hours < 0) {\n        hours = '0';\n      }\n    }\n\n\n    if (+minutes > 59) {\n      minutes = '59';\n    } else if (+minutes < 0) {\n      minutes = '0';\n    }\n\n    const d = this.value ? new Date(this.value.getTime()) : new Date();\n    d.setHours(+hours);\n    d.setMinutes(+minutes);\n    d.setSeconds(0);\n    d.setMilliseconds(0);\n\n    const isValueInRange = isDateInRange(this.minDate, this.maxDate, d);\n    if (!isValueInRange) { this.invalidInput.emit(); }\n\n\n    this.writeValue(d, true);\n    if (this.onChangeFn) { this.onChangeFn(d); }\n  }\n\n  @HostListener('keydown', ['$event']) keydownHandler(event: any) {\n    if (event.metaKey || event.ctrlKey || event.altKey) {\n      this.combination = this.combination.concat(event.code);\n      return;\n    }\n    if (!/^[0-9a-zA-Z\\s]{0,1}$/.test(event.key)) { return; }\n    const target = event.target;\n    const tValue = target.value;\n    const value = `${tValue.slice(0, target.selectionStart)}${event.key}${tValue.slice(target.selectionEnd)}`;\n    if (value.match(this.pattern) || this.combination.length > 0) { return true; }\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n\n  @HostListener('keyup', ['$event']) keyupHandler(event: any) {\n    this.combination = this.combination.filter(v => v !== event.code);\n  }\n\n  @HostListener('focus') focusHandler() {\n    this.isInputFocused = true;\n  }\n\n  @HostListener('focusout') focusoutHandler() {\n    this.isInputFocused = false;\n    this.setInputElementValue(this.formattedValueString);\n    if (this.onTouchedFn && !this.modalRef) { this.onTouchedFn(); }\n  }\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    public dialog: MatDialog,\n    private renderer: Renderer2,\n    private zone: NgZone,\n    private fm: FocusMonitor,\n    private elRef: ElementRef<HTMLElement>,\n    private ngZone: NgZone,\n    // tslint:disable-next-line:variable-name\n    protected _platform: Platform,\n    // tslint:disable-next-line:variable-name\n    @Optional() private _parentForm: NgForm,\n    // tslint:disable-next-line:variable-name\n    @Optional() private _matFormFiled: MatFormField,\n    // tslint:disable-next-line:variable-name\n    @Optional() private _parentFormGroup: FormGroupDirective,\n    // tslint:disable-next-line:variable-name\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    this.id = this.id;\n\n    this.errorStateMatcher = _defaultErrorStateMatcher;\n    if (this.ngControl != null) { this.ngControl.valueAccessor = this; }\n\n    if (_platform.IOS) {\n      ngZone.runOutsideAngular(() => {\n        elRef.nativeElement.addEventListener('keyup', (event: Event) => {\n          const el = event.target as HTMLInputElement;\n          if (!el.value && !el.selectionStart && !el.selectionEnd) {\n            // Note: Just setting `0, 0` doesn't fix the issue. Setting\n            // `1, 1` fixes it for the first time that you type text and\n            // then hold delete. Toggling to `1, 1` and then back to\n            // `0, 0` seems to completely fix it.\n            el.setSelectionRange(1, 1);\n            el.setSelectionRange(0, 0);\n          }\n        });\n      });\n    }\n\n    this._isServer = !this._platform.isBrowser;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this.elRef.nativeElement.focus();\n    }\n  }\n\n  setInputElementValue(value: any) {\n    if (value === null || value === undefined) { value = ''; }\n    Promise.resolve().then(() => {\n      this.zone.runOutsideAngular(() => {\n        this.renderer.setProperty(this.elRef.nativeElement, 'value', value);\n      });\n    });\n  }\n\n  validate() {\n    if (this.currentValue === null || this.currentValue === undefined) { return null; }\n\n    const isValueInRange = this.strict ?\n      isDateInRange(this.minDate, this.maxDate, this.currentValue) :\n      isTimeInRange(this.minDate, this.maxDate, this.currentValue);\n\n    return isValueInRange ? null : { dateRange: true };\n  }\n\n  ngAfterViewInit() {\n    this.listeners.push(\n      this.renderer.listen(\n        this._matFormFiled ? this._matFormFiled._elementRef.nativeElement : this.elRef.nativeElement\n        , 'click', this.clickHandler)\n    );\n  }\n\n  clickHandler = (e: FocusEvent) => {\n    if ((this.modalRef && this.modalRef.componentInstance.isClosing) || this.disabled || this.disableDialogOpenOnClick) { return; }\n    if (!this.modalRef && !this.disableDialogOpenOnClick) { this.showDialog(); }\n  }\n\n  ngOnInit() {\n    if (this._platform.isBrowser) {\n      this.fm.monitor(this.elRef.nativeElement, true).subscribe(origin => {\n        this.focused = !!origin;\n        this.stateChanges.next();\n      });\n\n    }\n\n    const hasMaxDate = !!this.maxDate;\n    const hasMinDate = !!this.minDate;\n\n    if (hasMinDate || hasMaxDate) {\n      if (hasMinDate) { this.minDate.setSeconds(0); this.minDate.setMilliseconds(0); }\n      if (hasMaxDate) { this.maxDate.setSeconds(0); this.maxDate.setMilliseconds(0); }\n      Promise.resolve().then(() => this.generateAllowedMap());\n\n      if (!(this.ngControl as any)._rawValidators.find(v => v === this)) {\n        this.ngControl.control.setValidators(((this.ngControl as any)._rawValidators as any[]).concat(this));\n        this.ngControl.control.updateValueAndValidity();\n      }\n    }\n\n    this._skipValueChangeEmission = false;\n  }\n\n  generateAllowedMap() {\n    const isStrictMode = this.strict && this.value instanceof Date;\n    if (this.mode === '24h') {\n      this.allowed24HourMap = {};\n      for (let h = 0; h < 24; h++) {\n        for (let m = 0; m < 60; m++) {\n          const hourMap = this.allowed24HourMap[h] || {};\n          if (isStrictMode) {\n            const currentDate = new Date(this.value.getTime());\n            currentDate.setHours(h);\n            currentDate.setMinutes(m);\n            currentDate.setSeconds(0);\n            currentDate.setMilliseconds(0);\n            hourMap[m] = isDateInRange(this.minDate, this.maxDate, currentDate);\n          } else {\n            hourMap[m] = isAllowed(h, m, this.minDate, this.maxDate, '24h');\n          }\n          this.allowed24HourMap[h] = hourMap;\n        }\n      }\n    } else {\n      this.allowed12HourMap = { am: {}, pm: {} };\n      for (let h = 0; h < 24; h++) {\n        const meridiem = h < 12 ? 'am' : 'pm';\n        for (let m = 0; m < 60; m++) {\n          const hour = (h > 12 ? h - 12 : h === 0 ? 12 : h);\n          const hourMap = this.allowed12HourMap[meridiem][hour] || {};\n          if (isStrictMode) {\n            const currentDate = new Date(this.value.getTime());\n            currentDate.setHours(h);\n            currentDate.setMinutes(m);\n            currentDate.setSeconds(0);\n            currentDate.setMilliseconds(0);\n            hourMap[m] = isDateInRange(this.minDate, this.maxDate, currentDate);\n          } else {\n            hourMap[m] = isAllowed(h, m, this.minDate, this.maxDate, '24h');\n          }\n          this.allowed12HourMap[meridiem][hour] = hourMap;\n        }\n      }\n    }\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n\n    this.pattern = this.mode === '24h' ? /^[0-9]{1,2}:?([0-9]{1,2})?$/ : /^[0-9]{1,2}:?([0-9]{1,2})?\\s?(a|p)?m?$/;\n\n    if (\n      (simpleChanges.minDate && !simpleChanges.minDate.isFirstChange() &&\n        +simpleChanges.minDate.currentValue !== simpleChanges.minDate.previousValue) ||\n      (simpleChanges.maxDate && !simpleChanges.maxDate.isFirstChange() &&\n        +simpleChanges.maxDate.currentValue !== simpleChanges.maxDate.previousValue) ||\n      (simpleChanges.disableLimitBase && !simpleChanges.disableLimitBase.isFirstChange() &&\n        +simpleChanges.disableLimitBase.currentValue !== simpleChanges.disableLimitBase.previousValue)\n    ) {\n      this.generateAllowedMap();\n      this.ngControl.control.updateValueAndValidity();\n    }\n\n    if (!this.modalRef || !this.modalRef.componentInstance) { return; }\n\n    this.modalRef.componentInstance.data = {\n      mode: this.mode,\n      value: this.currentValue,\n      okLabel: this.okLabel,\n      cancelLabel: this.cancelLabel,\n      okButtonTemplate: this.okButtonTemplate,\n      cancelButtonTemplate: this.cancelButtonTemplate,\n      anteMeridiemAbbreviation: this.anteMeridiemAbbreviation,\n      postMeridiemAbbreviation: this.postMeridiemAbbreviation,\n      color: this.color,\n      isPm: this.isPm,\n      minDate: this.minDate,\n      maxDate: this.maxDate,\n      allowed12HourMap: this.allowed12HourMap,\n      allowed24HourMap: this.allowed24HourMap,\n    };\n  }\n\n  checkValidity(value: Date) {\n    if (!value) { return false; }\n    const hour = value.getHours();\n    const minutes = value.getMinutes();\n    const meridiem = this.isPm ? 'PM' : 'AM';\n    return isAllowed(hour, minutes, this.minDate, this.maxDate, this.mode, meridiem);\n  }\n\n  writeValue(value: Date, isInnerCall = false): void {\n\n    if (!isInnerCall) {\n      this._skipValueChangeEmission = true;\n      Promise.resolve().then(() => this._skipValueChangeEmission = false);\n    }\n\n    if (value) {\n      value.setSeconds(0);\n      value.setMilliseconds(0);\n    }\n\n    if (+this.value !== +value) { this.value = value; }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeFn = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedFn = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  showDialog() {\n    if (this.disabled) { return; }\n    this.isInputFocused = false;\n    this.modalRef = this.dialog.open(MatTimepickerComponentDialogComponent, {\n      autoFocus: false,\n      data: {\n        mode: this.mode,\n        value: this.currentValue,\n        okLabel: this.okLabel,\n        cancelLabel: this.cancelLabel,\n        okButtonTemplate: this.okButtonTemplate,\n        cancelButtonTemplate: this.cancelButtonTemplate,\n        anteMeridiemAbbreviation: this.anteMeridiemAbbreviation,\n        postMeridiemAbbreviation: this.postMeridiemAbbreviation,\n        color: this.color,\n        isPm: this.isPm,\n        minDate: this.minDate,\n        maxDate: this.maxDate,\n        allowed12HourMap: this.allowed12HourMap,\n        allowed24HourMap: this.allowed24HourMap\n      }\n    });\n    const instance = this.modalRef.componentInstance;\n    instance.changeEvent.pipe(takeUntil(this.isAlive)).subscribe(this.handleChange);\n    instance.okClickEvent.pipe(takeUntil(this.isAlive)).subscribe(this.handleOk);\n    instance.cancelClickEvent.pipe(takeUntil(this.isAlive)).subscribe(this.handleCancel);\n    this.modalRef.beforeClosed().pipe(first()).subscribe(() => instance.isClosing = true);\n    this.modalRef.afterClosed().pipe(first()).subscribe(() => {\n      if (this.onTouchedFn) { this.onTouchedFn(); }\n      this.modalRef = null;\n      this.elRef.nativeElement.focus();\n    });\n\n    this.currentValue = this.value as Date;\n  }\n\n  handleChange = (newValue) => {\n    if (!(newValue instanceof Date)) { return; }\n    const v = this.value instanceof Date ? new Date(this.value.getTime()) : new Date();\n    v.setHours(newValue.getHours());\n    v.setMinutes(newValue.getMinutes());\n    v.setSeconds(0);\n    v.setMilliseconds(0);\n    this.currentValue = v;\n  }\n\n  handleOk = (value) => {\n    if (!this.currentValue && value) { this.currentValue = value; }\n    if (this.onChangeFn) { this.onChangeFn(this.currentValue); }\n    this.value = this.currentValue;\n    this.modalRef.close();\n  }\n\n  handleCancel = () => {\n    this.modalRef.close();\n  }\n\n  ngOnDestroy() {\n    this.isAlive.next();\n    this.isAlive.complete();\n    this.stateChanges.complete();\n\n    if (this._platform.isBrowser) {\n      this.fm.stopMonitoring(this.elRef.nativeElement);\n    }\n\n    this.listeners.forEach(l => l());\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { ClockViewType, ClockNumber, ITimeData, ClockMode } from '../interfaces-and-types';\nimport { isAllowed, getIsAvailabeFn } from '../util';\n\n@Component({\n  selector: 'mat-clock',\n  templateUrl: './clock.component.html',\n  styleUrls: ['./clock.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ClockComponent implements OnChanges {\n\n  @Input() mode: ClockMode;\n  @Input() viewType: ClockViewType;\n  @Input() color = 'primary';\n  @Input() formattedValue: number;\n  @Input() minDate: Date;\n  @Input() maxDate: Date;\n  @Input() isPm: boolean;\n  @Input() formattedHours: number;\n  @Input() minutes: number;\n  @Output() changeEvent: EventEmitter<any> = new EventEmitter<any>();\n  @Output() unavailableSelection: EventEmitter<any> = new EventEmitter<any>();\n  @Output() invalidMeridiem: EventEmitter<any> = new EventEmitter<any>();\n  @Output() invalidSelection: EventEmitter<any> = new EventEmitter<any>();\n  @Output() clearInvalidMeridiem: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input() allowed12HourMap = null;\n  @Input() allowed24HourMap = null;\n\n  isFormattedValueAllowed = true;\n\n  isAvailableFn: ReturnType<typeof getIsAvailabeFn>;\n\n  meridiem = null;\n  touching = false;\n  angle: number;\n  numbers: ClockNumber[] = [];\n  secondaryNumbers: ClockNumber[] = [];\n  minuteDots: ClockNumber[] = [];\n  invalidMeridiemEmitted = true;\n\n  initIsAllowedFn() {\n    if (!this.allowed12HourMap && !this.allowed24HourMap) { return; }\n    this.isAvailableFn = getIsAvailabeFn(this.allowed12HourMap, this.allowed24HourMap, this.mode);\n  }\n\n  isAvailable(value) {\n    return this.isAvailableFn ? this.isAvailableFn(value, this.viewType, this.isPm, this.formattedHours) : true;\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n\n    if (\n      simpleChanges.allowed12HourMap ||\n      simpleChanges.allowed24HourMap ||\n      (simpleChanges.mode && !simpleChanges.mode.firstChange)\n    ) {\n      this.initIsAllowedFn();\n    }\n\n    this.calculateAngule();\n    this.setNumbers();\n    this.meridiem = this.isPm ? 'PM' : 'AM';\n\n    if (simpleChanges.formattedValue && (this.allowed12HourMap || this.allowed24HourMap)) {\n      this.isFormattedValueAllowed = this.isAvailable(this.formattedValue);\n    }\n\n    const isSelectedTimeAvailable = (this.isAvailableFn) ?\n      // when calling isAvailableFn here we should always set the viewType to minutes because we want to check the hours and the minutes\n      this.isAvailableFn(this.minutes, 'minutes', this.isPm, this.formattedHours) : true;\n\n    // if (this.mode === '24h' && this.viewType === 'minutes' && this.isAvailableFn) {\n    //   const areMinitesAvailable = this.isAvailableFn(this.minutes, 'minutes', this.isPm, this.formattedHours);\n    //   if (!areMinitesAvailable) {\n    //     if (this.minDate && this.minDate.getMinutes() > this.minutes) {\n    //       setTimeout(() => { this.changeEvent.emit({ value: this.minDate.getMinutes(), type: 'minutes' }); });\n    //     } else {\n    //       setTimeout(() => { this.changeEvent.emit({ value: this.maxDate.getMinutes(), type: 'minutes' }); });\n    //     }\n    //   }\n    // }\n\n    if (isSelectedTimeAvailable && this.invalidMeridiemEmitted) {\n      this.clearInvalidMeridiem.emit();\n      this.invalidMeridiemEmitted = false;\n    }\n\n    this.invalidSelection.emit(!isSelectedTimeAvailable);\n  }\n\n  calculateAngule() {\n    this.angle = this.getPointerAngle(this.formattedValue, this.viewType);\n  }\n\n  setNumbers() {\n    if (this.viewType === 'hours') {\n      if (this.mode === '12h') {\n        const meridiem = this.isPm ? 'pm' : 'am';\n        const isAllowedFn = this.allowed12HourMap ? num => this.allowed12HourMap[meridiem][num + 1][0] : undefined;\n        this.numbers = this.getNumbers(12, { size: 256 }, isAllowedFn);\n        this.secondaryNumbers = [];\n        this.minuteDots = [];\n      } else if (this.mode === '24h') {\n        const isAllowedFn = this.allowed24HourMap ? num => this.allowed24HourMap[num][0] : undefined;\n        this.numbers = this.getNumbers(12, { size: 256 }, isAllowedFn);\n        this.secondaryNumbers = this.getNumbers(12, { size: 256 - 64, start: 13 }, isAllowedFn);\n        this.minuteDots = [];\n      }\n    } else {\n      const meridiem = this.isPm ? 'pm' : 'am';\n      const isAllowedFn =\n        !!this.allowed12HourMap ? num => this.allowed12HourMap[meridiem][this.formattedHours][num] :\n          !!this.allowed24HourMap ? num => this.allowed24HourMap[this.formattedHours][num] : undefined;\n\n      this.numbers = this.getNumbers(12, { size: 256, start: 5, step: 5 }, isAllowedFn);\n      this.minuteDots = this.getNumbers(60, { size: 256, start: 13 }).map(digit => {\n        if (digit.display <= 59) {\n          digit.allowed = isAllowedFn ? isAllowedFn(digit.display) : true;\n          return digit;\n        }\n        digit.display = digit.display - 60;\n        digit.allowed = isAllowedFn ? isAllowedFn(digit.display) : true;\n        return digit;\n      });\n      this.secondaryNumbers = [];\n    }\n  }\n\n  disableAnimatedPointer() {\n    this.touching = true;\n  }\n\n  enableAnimatedPointer() {\n    this.touching = false;\n  }\n\n  handleTouchMove = (e: any) => {\n    e.preventDefault(); // prevent scrolling behind the clock on iOS\n    const rect = e.target.getBoundingClientRect();\n    this.movePointer(e.changedTouches[0].clientX - rect.left, e.changedTouches[0].clientY - rect.top);\n  }\n\n  handleTouchEnd(e: any) {\n    this.handleTouchMove(e);\n    this.enableAnimatedPointer();\n  }\n\n  handleMouseMove(e: any) {\n    // MouseEvent.which is deprecated, but MouseEvent.buttons is not supported in Safari\n    if ((e.buttons === 1 || e.which === 1) && this.touching) {\n      const rect = e.target.getBoundingClientRect();\n      this.movePointer(e.clientX - rect.left, e.clientY - rect.top);\n    }\n  }\n\n  handleClick(e: any) {\n    const rect = e.target.getBoundingClientRect();\n    this.movePointer(e.clientX - rect.left, e.clientY - rect.top);\n  }\n\n  movePointer(x, y) {\n    const value = this.getPointerValue(x, y, 256);\n    if (!this.isAvailable(value)) {\n      this.unavailableSelection.emit();\n      return;\n    }\n    if (value !== this.formattedValue) {\n      this.changeEvent.emit({ value, type: this.viewType });\n      if (this.viewType !== 'minutes') {\n        if (!this.isAvailable(value)) {\n          if (this.minDate && this.isAvailable(value)\n          ) {\n            this.changeEvent.emit({ value: this.minDate.getMinutes(), type: 'minutes' });\n          } else if (this.maxDate && this.isAvailable(value)) {\n            this.changeEvent.emit({ value: this.maxDate.getMinutes(), type: 'minutes' });\n          }\n        }\n      }\n    }\n  }\n\n  getNumbers(count, { size, start = 1, step = 1 }, isAllowedFn?: (num: number) => boolean) {\n    return Array.apply(null, Array(count)).map((_, i) => ({\n      display: i * step + start,\n      translateX: (size / 2 - 20) * Math.cos(2 * Math.PI * (i - 2) / count),\n      translateY: (size / 2 - 20) * Math.sin(2 * Math.PI * (i - 2) / count),\n      allowed: isAllowedFn ? isAllowedFn(i) : true\n    }));\n  }\n\n  getPointerAngle(value, mode: ClockViewType) {\n    if (this.viewType === 'hours') {\n      return this.mode === '12h' ? 360 / 12 * (value - 3) : 360 / 12 * (value % 12 - 3);\n    }\n    return 360 / 60 * (value - 15);\n  }\n\n  getPointerValue(x, y, size) {\n    let value;\n    let angle = Math.atan2(size / 2 - x, size / 2 - y) / Math.PI * 180;\n    if (angle < 0) {\n      angle = 360 + angle;\n    }\n\n    if (this.viewType === 'hours') {\n      if (this.mode === '12h') {\n        value = 12 - Math.round(angle * 12 / 360);\n        return value === 0 ? 12 : value;\n      }\n\n      const radius = Math.sqrt(Math.pow(size / 2 - x, 2) + Math.pow(size / 2 - y, 2));\n      value = 12 - Math.round(angle * 12 / 360);\n      if (value === 0) { value = 12; }\n      if (radius < size / 2 - 32) { value = value === 12 ? 0 : value + 12; }\n      return value;\n\n    }\n\n    value = Math.round(60 - 60 * angle / 360);\n    return value === 60 ? 0 : value;\n  }\n}\n","import { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClockComponent } from './clock/clock.component';\nimport { MatTimepickerComponentDialogComponent } from './timepicker-dialog/timepicker-dialog.component';\nimport { MatTimepickerDirective } from './timepicker.directive';\n\n@NgModule({\n  declarations: [\n    ClockComponent,\n    MatTimepickerDirective,\n    MatTimepickerComponentDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatInputModule\n  ],\n  exports: [\n    MatTimepickerDirective\n  ],\n  entryComponents: [\n    MatTimepickerComponentDialogComponent\n  ]\n})\nexport class MatTimepickerModule { }\n"]}