{"version":3,"file":"mat-timepicker.js","sources":["../../../projects/mat-timepicker/src/lib/util.ts","../../../projects/mat-timepicker/src/lib/timepicker-dialog/timepicker-dialog.component.ts","../../../projects/mat-timepicker/src/lib/timepicker.directive.ts","../../../projects/mat-timepicker/src/lib/clock/clock.component.ts","../../../projects/mat-timepicker/src/lib/mat-timepicker.module.ts","../../../projects/mat-timepicker/src/public-api.ts","../../../projects/mat-timepicker/src/mat-timepicker.ts"],"names":[],"mappings":"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","sourcesContent":["import { ITimeData, ClockViewType, ClockMode } from './interfaces-and-types';\n\nexport function twoDigits(n) {\n  return n < 10 ? `0${n}` : `${n}`;\n}\n\nexport function addDays(date: Date, days: number) {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n}\n\nexport function convertHoursForMode(hour: number, mode: ClockMode) {\n  const isPm = hour >= 12;\n  if (mode === '24h') {\n    return { hour, isPm };\n  } else if (hour === 0 || hour === 12) {\n    return { hour: 12, isPm };\n  } else if (hour < 12) {\n    return { hour, isPm };\n  }\n  return { hour: hour - 12, isPm };\n}\n\nfunction mod(a, b) {\n  return a - Math.floor(a / b) * b;\n}\n\nexport function getShortestAngle(from, to) {\n  const difference = to - from;\n  return from + mod(difference + 180, 360) - 180;\n}\n\nexport function isDateInRange(minDate: Date, maxDate: Date, current: Date) {\n  const unixCurrentDate = +current;\n  return (!minDate || +minDate <= unixCurrentDate) && (!maxDate || unixCurrentDate <= +maxDate);\n}\n\nexport function isTimeInRange(minDate: Date, maxDate: Date, current: Date) {\n  if (minDate instanceof Date) {\n    const newMinDate = new Date();\n    newMinDate.setHours(minDate.getHours());\n    newMinDate.setMinutes(minDate.getMinutes());\n    newMinDate.setSeconds(0);\n    newMinDate.setMilliseconds(0);\n    minDate = newMinDate;\n  }\n  if (maxDate instanceof Date) {\n    const newMaxDate = new Date();\n    newMaxDate.setHours(maxDate.getHours());\n    newMaxDate.setMinutes(maxDate.getMinutes());\n    newMaxDate.setSeconds(0);\n    newMaxDate.setMilliseconds(0);\n    maxDate = newMaxDate;\n  }\n  if (current instanceof Date) {\n    const newCurrent = new Date();\n    newCurrent.setHours(current.getHours());\n    newCurrent.setMinutes(current.getMinutes());\n    newCurrent.setSeconds(0);\n    newCurrent.setMilliseconds(0);\n    current = newCurrent;\n  }\n  const unixCurrentDate = +current;\n  return (!minDate || +minDate <= unixCurrentDate) && (!maxDate || unixCurrentDate <= +maxDate);\n}\n\n// used when generating the allowed maps\n\nexport function isAllowed(\n  hour: number,\n  minutes: number,\n  minDate: Date,\n  maxDate: Date,\n  clockMode: ClockMode,\n  selectedMeridiem?: 'AM' | 'PM'\n) {\n  if (hour > 24 || hour < 0 || minutes > 60 || minutes < 0) { return false; }\n\n  if (!minDate && !maxDate) { return true; }\n\n  if (clockMode === '12h') {\n    if (hour === 12 && selectedMeridiem === 'AM') { hour = 0; }\n    if (hour > 12) { hour -= 12; }\n  }\n  const checkDate = new Date();\n\n  checkDate.setHours(hour);\n  checkDate.setMinutes(minutes);\n  checkDate.setSeconds(0);\n  checkDate.setMilliseconds(0);\n\n  return isDateInRange(minDate, maxDate, checkDate);\n}\n\n// used by the clock component to visually disable the not allowed values\n\nexport function getIsAvailabeFn(allowed12HourMap, allowed24HourMap, mode: ClockMode) {\n  return (value: number, viewType: ClockViewType, isPm: boolean, h?: number) => {\n    const isHourCheck = viewType === 'hours';\n    const [hour, minutes] = isHourCheck ? [value, null] : [h, value];\n\n    if (mode === '12h') {\n      if (!allowed12HourMap) { return true; }\n      const meridiem = isPm ? 'pm' : 'am';\n      if (isHourCheck) {\n        return !!Object.values(allowed12HourMap[meridiem][hour]).find(v => v === true);\n      }\n      return allowed12HourMap[meridiem][hour][minutes];\n    }\n\n    if (!allowed24HourMap) { return true; }\n\n    if (isHourCheck) {\n      return !!Object.values(allowed24HourMap[hour]).find(v => v === true);\n    }\n    return allowed24HourMap[hour][minutes];\n  };\n}\n","import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Component, EventEmitter, Output, Inject, DoCheck, TemplateRef } from '@angular/core';\nimport { ClockViewType, ClockMode, IAllowed24HourMap, IAllowed12HourMap } from '../interfaces-and-types';\nimport { twoDigits, convertHoursForMode } from '../util';\nimport { MatTimepickerButtonTemplateContext } from '../timepicker.directive';\n\n@Component({\n  selector: 'mat-timepicker-dialog',\n  templateUrl: './timepicker-dialog.component.html',\n  styleUrls: ['./timepicker-dialog.component.scss']\n})\nexport class MatTimepickerComponentDialogComponent implements DoCheck {\n\n  twoDigits = twoDigits;\n\n  @Output() changeEvent: EventEmitter<any> = new EventEmitter<any>();\n  @Output() okClickEvent: EventEmitter<any> = new EventEmitter<Date>();\n  @Output() cancelClickEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  allowed24HourMap: IAllowed24HourMap = null;\n  allowed12HourMap: IAllowed12HourMap = null;\n\n  invalidSelection = false;\n\n  okLabel: string;\n  cancelLabel: string;\n\n  okButtonTemplate: TemplateRef<MatTimepickerButtonTemplateContext>;\n  cancelButtonTemplate: TemplateRef<MatTimepickerButtonTemplateContext>;\n\n  anteMeridiemAbbreviation: string;\n  postMeridiemAbbreviation: string;\n\n  set value(value: any) {\n    value = value || this.minDate || this.maxDate || new Date();\n    this.hours = value.getHours();\n    this.minutes = value.getMinutes();\n    this._value = value;\n  }\n\n  get value() { return this._value; }\n\n  mode: ClockMode;\n  viewType: ClockViewType = 'hours';\n\n  minutes: any;\n  color: string;\n  isPm = false;\n  skipMinuteAutoSwitch = false;\n  autoSwitchID = null;\n  invalidMedianID = null;\n  hasInvalidMeridiem = false;\n  editHoursClicked = false;\n  isClosing = false;\n\n  minDate: Date;\n  maxDate: Date;\n\n  // tslint:disable-next-line:variable-name\n  _formattedHour: any;\n  // tslint:disable-next-line:variable-name\n  _hours: any;\n  // tslint:disable-next-line:variable-name\n  _value: Date;\n\n  set hours(value: any) {\n    this._hours = value;\n    this._formattedHour = convertHoursForMode(this.hours, this.mode).hour;\n  }\n  get hours() { return this._hours; }\n\n  get formattedHours() { return this._formattedHour; }\n\n  bindData(data: any) {\n    this.mode = data.mode;\n    this.okLabel = data.okLabel;\n    this.cancelLabel = data.cancelLabel;\n    this.okButtonTemplate = data.okButtonTemplate;\n    this.cancelButtonTemplate = data.cancelButtonTemplate;\n    this.anteMeridiemAbbreviation = data.anteMeridiemAbbreviation;\n    this.postMeridiemAbbreviation = data.postMeridiemAbbreviation;\n    this.color = data.color;\n    this.minDate = data.minDate;\n    this.maxDate = data.maxDate;\n    this.allowed12HourMap = data.allowed12HourMap;\n    this.allowed24HourMap = data.allowed24HourMap;\n  }\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data) {\n    this.isPm = data.isPm;\n    this.bindData(data);\n    // keep this always at the bottom\n    this.value = data.value;\n  }\n\n  ngDoCheck() { this.bindData(this.data); }\n\n  handleClockChange({ value, type }: { value: number, type: 'minutes' | 'hours' }) {\n    const is24hoursAutoMeridiemChange = this.mode === '24h' && type === 'hours' && (\n      (this.hours >= 12 && value < 12) || (this.hours < 12 && value >= 12));\n    if ((this.hasInvalidMeridiem && this.mode === '12h') || is24hoursAutoMeridiemChange) {\n      this.isPm = !this.isPm;\n      this.hasInvalidMeridiem = false;\n    }\n\n    if ((type && type === 'hours') || (!type && this.viewType === 'hours')) {\n      this.hours = value;\n    } else if ((type && type === 'minutes') || (!type && this.viewType === 'minutes')) {\n      this.minutes = value;\n    }\n\n    const newValue = new Date();\n    const hours = this.isPm ? this.hours < 12 ? this.hours + 12 : this.hours : this.hours === 12 ? 0 : this.hours;\n    newValue.setHours(hours);\n    newValue.setMinutes(this.minutes);\n    newValue.setSeconds(0);\n    newValue.setMilliseconds(0);\n    this.value = newValue;\n    this.changeEvent.emit(newValue);\n  }\n\n  clearInvalidMeridiem() {\n    this.hasInvalidMeridiem = false;\n  }\n\n  handleUnavailableSelection() {\n    clearTimeout(this.autoSwitchID);\n  }\n\n  handleClockChangeDone(e) {\n    e.preventDefault(); // prevent mouseUp after touchEnd\n\n    if (this.viewType === 'hours' && !this.skipMinuteAutoSwitch) {\n      this.autoSwitchID = setTimeout(() => {\n        this.editMinutes();\n        this.autoSwitchID = null;\n      }, 300);\n    }\n  }\n\n  editHours() {\n    this.viewType = 'hours';\n    this.editHoursClicked = true;\n    setTimeout(() => { this.editHoursClicked = false; }, 0);\n  }\n\n  editMinutes() {\n    if (this.hasInvalidMeridiem) {\n      this.isPm = !this.isPm;\n      this.hasInvalidMeridiem = false;\n    }\n    this.viewType = 'minutes';\n  }\n\n  invalidSelectionHandler(value) {\n    this.invalidSelection = value;\n  }\n\n\n  invalidMeridiem() {\n    if (this.viewType !== 'minutes' && this.editHoursClicked) {\n      if (this.invalidMedianID) { return; }\n      this.invalidMedianID = setTimeout(() => {\n        this.isPm = !this.isPm;\n        this.hasInvalidMeridiem = false;\n      }, 0);\n      return;\n    }\n    this.hasInvalidMeridiem = true;\n  }\n\n  meridiemChange(hours) {\n    const changeData = {\n      type: this.viewType,\n      value: this.viewType === 'hours' ? hours : this.value.getMinutes()\n    };\n    this.handleClockChange(changeData);\n  }\n\n\n  setAm() {\n    if (this.hours >= 12) {\n      this.hours = this.hours - 12;\n    }\n    this.isPm = false;\n\n    this.meridiemChange(this.hours);\n  }\n\n  setPm() {\n    if (this.hours < 12) {\n      this.hours = this.hours + 12;\n    }\n    this.isPm = true;\n    this.meridiemChange(this.hours);\n  }\n\n  okClickHandler = () => {\n    if (this.hasInvalidMeridiem) {\n      this.isPm = !this.isPm;\n      this.hasInvalidMeridiem = false;\n    }\n    this.okClickEvent.emit(this.value);\n  }\n\n  cancelClickHandler = () => {\n    this.cancelClickEvent.emit();\n  }\n\n}\n","import { ControlValueAccessor, NgForm, NgControl, FormGroupDirective, FormControl } from '@angular/forms';\nimport {\n  Directive,\n  OnInit,\n  EventEmitter,\n  Input,\n  ElementRef,\n  OnChanges,\n  Renderer2,\n  AfterViewInit,\n  OnDestroy,\n  Optional,\n  SimpleChanges,\n  NgZone,\n  HostBinding,\n  Self,\n  Output,\n  HostListener,\n  TemplateRef\n} from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldControl, MatFormField } from '@angular/material/form-field';\nimport { ClockMode, IAllowed24HourMap, IAllowed12HourMap } from './interfaces-and-types';\nimport { twoDigits, convertHoursForMode, isAllowed, isDateInRange, isTimeInRange } from './util';\nimport { MatTimepickerComponentDialogComponent } from './timepicker-dialog/timepicker-dialog.component';\nimport { Subject } from 'rxjs';\nimport { takeUntil, first } from 'rxjs/operators';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\n\nexport interface MatTimepickerButtonTemplateContext {\n  $implicit: () => void;\n  label: string;\n}\n\n@Directive({\n  selector: 'input[matTimepicker]',\n  providers: [\n    { provide: MatFormFieldControl, useExisting: MatTimepickerDirective }\n  ],\n  // tslint:disable-next-line:no-host-metadata-property\n  host: {\n    /**\n     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n     */\n    // tslint:disable-next-line:object-literal-key-quotes\n    'class': 'mat-input-element mat-form-field-autofill-control',\n    '[class.mat-input-server]': '_isServer',\n    // Native input properties that are overwritten by Angular inputs need to be synced with\n    // the native input element. Otherwise property bindings for those don't work.\n    '[attr.id]': 'id',\n    '[attr.placeholder]': 'placeholder',\n    '[disabled]': 'disabled',\n    '[required]': 'required',\n    '[attr.readonly]': 'readonly || null',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-required]': 'required.toString()',\n  },\n  exportAs: 'matTimepicker'\n})\nexport class MatTimepickerDirective implements\n  OnInit,\n  OnChanges,\n  AfterViewInit,\n  OnDestroy,\n  ControlValueAccessor,\n  MatFormFieldControl<any>\n{\n  static nextId = 0;\n\n  /** Whether the component is being rendered on the server. */\n  // tslint:disable-next-line:variable-name\n  readonly _isServer: boolean;\n\n  // tslint:disable-next-line:variable-name\n  _errorState = false;\n  get errorState() {\n    const oldState = this._errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = this.errorStateMatcher ? this.errorStateMatcher.isErrorState(control, parent) : oldState;\n\n    if (newState !== oldState) {\n      this._errorState = newState;\n      this.stateChanges.next();\n    }\n\n    return newState;\n  }\n\n  @Input()\n  get disabled(): boolean {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // Browsers may not fire the blur event if the input is disabled too quickly.\n    // Reset from here to ensure that the element doesn't become stuck.\n    if (this.focused) {\n      this.focused = false;\n      this.stateChanges.next();\n    }\n  }\n  // tslint:disable-next-line:variable-name\n  protected _disabled = false;\n\n  @Input() get id(): string { return this._id; }\n  set id(value: string) { this._id = value || this._uid; }\n  // tslint:disable-next-line:variable-name\n  protected _id: string;\n\n  @Input() get readonly(): boolean { return this._readonly; }\n  set readonly(value: boolean) { this._readonly = coerceBooleanProperty(value); }\n  // tslint:disable-next-line:variable-name\n  private _readonly = false;\n\n  private isAlive: Subject<any> = new Subject<any>();\n  stateChanges = new Subject<void>();\n\n  // tslint:disable-next-line:variable-name\n  protected _uid = `mat-input-${MatTimepickerDirective.nextId++}`;\n  @HostBinding('class.floating') get shouldLabelFloat() { return this.focused || !this.empty; }\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  @Input() get required() {\n    return this._required;\n  }\n\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n  // tslint:disable-next-line:variable-name\n  private _required = false;\n\n  @Input() get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  // tslint:disable-next-line:variable-name\n  private _placeholder: string;\n\n  focused = false;\n  private pattern: RegExp;\n\n  private allowed24HourMap: IAllowed24HourMap = null;\n  private allowed12HourMap: IAllowed12HourMap = null;\n\n  private isInputFocused = false;\n\n  /* Use a custom template for the ok button */\n  @Input() okButtonTemplate: TemplateRef<MatTimepickerButtonTemplateContext> | null = null;\n  /* Use a custom template for the cancel button */\n  @Input() cancelButtonTemplate: TemplateRef<MatTimepickerButtonTemplateContext> | null = null;\n\n  /** Override the label of the ok button. */\n  @Input() okLabel = 'Ok';\n  /** Override the label of the cancel button. */\n  @Input() cancelLabel = 'Cancel';\n  /** Override the ante meridiem abbreviation. */\n  @Input() anteMeridiemAbbreviation = 'am';\n  /** Override the post meridiem abbreviation. */\n  @Input() postMeridiemAbbreviation = 'pm';\n\n  /** Sets the clock mode, 12-hour or 24-hour clocks are supported. */\n  @Input() mode: ClockMode = '24h';\n  @Input() color = 'primary';\n  @Input() disableDialogOpenOnClick = false;\n  @Input() strict = true;\n\n  controlType = 'angular-material-timepicker';\n\n  private listeners: (() => void)[] = [];\n\n  @Input() minDate: Date;\n  @Input() maxDate: Date;\n\n  // tslint:disable-next-line:variable-name\n  private _isPm: boolean;\n  // tslint:disable-next-line:variable-name\n  private _value: Date;\n  // tslint:disable-next-line:variable-name\n  private _formattedValueString: string;\n\n  // tslint:disable-next-line:variable-name\n  private _skipValueChangeEmission = true;\n\n  @Input() set value(value: Date) {\n    if (value === this._value) { return; }\n    this._value = value;\n    if (!value) {\n      this._formattedValueString = null;\n      this.setInputElementValue('');\n      this.currentValue = value;\n      return;\n    }\n\n    const { hour, isPm } = convertHoursForMode(value.getHours(), this.mode);\n    this._isPm = isPm;\n    this._formattedValueString = this.mode === '12h' ?\n      `${hour}:${twoDigits(value.getMinutes())} ${isPm ? this.postMeridiemAbbreviation : this.anteMeridiemAbbreviation}` :\n      `${twoDigits(value.getHours())}:${twoDigits(value.getMinutes())}`;\n\n    if (!this.isInputFocused) { this.setInputElementValue(this.formattedValueString); }\n    this.currentValue = value;\n    this.stateChanges.next();\n\n    if (this._skipValueChangeEmission) { return; }\n    this.timeChange.emit(this.currentValue);\n  }\n\n  get value() { return this._value; }\n\n  get isPm() { return this._isPm; }\n\n  get empty() {\n    return !(this.currentValue instanceof Date);\n  }\n\n  private get formattedValueString() { return this._formattedValueString; }\n\n  private currentValue: Date;\n  private modalRef: MatDialogRef<MatTimepickerComponentDialogComponent>;\n\n  private onChangeFn: any;\n  private onTouchedFn: any;\n  private combination: string[] = [];\n\n  @Output() timeChange: EventEmitter<any> = new EventEmitter<any>();\n  @Output() invalidInput: EventEmitter<any> = new EventEmitter<any>();\n\n  @HostListener('input') inputHandler() {\n    let value = (this.elRef.nativeElement as any).value as string;\n    const length = value.length;\n    if (length === 0) {\n      this.writeValue(null, true);\n      if (this.onChangeFn) { this.onChangeFn(null); }\n      return;\n    }\n\n    const meridiemResult = value.match(/am|pm/i);\n    let meridiem: string | null = null;\n    if (meridiemResult) {\n      value = value.replace(meridiemResult[0], '');\n      [meridiem] = meridiemResult;\n    }\n    const valueHasColumn = value.includes(':');\n    let [hours, minutes]: any = length === 1 ? [value, 0] :\n      length === 2 && !valueHasColumn ? [value, 0] : valueHasColumn ? value.split(':') : value.split(/(\\d\\d)/).filter(v => v);\n\n    hours = +hours;\n\n    if (/\\s/.test(minutes)) {\n      let other;\n      [minutes, other] = minutes.split(/\\s/);\n      if (other === 'pm' && !isNaN(hours) && hours < 12) { hours += 12; }\n    }\n\n    minutes = +minutes;\n\n    if (isNaN(hours) || isNaN(minutes)) {\n      this.writeValue(null, true); return;\n    }\n\n    if (hours < 12 && meridiem && meridiem.toLowerCase() === 'pm') {\n      hours += 12;\n    } else if (hours > 12 && meridiem && meridiem.toLowerCase() === 'am') {\n      hours -= 12;\n    }\n\n    if (this.mode === '12h' && +hours < 1) {\n      hours = '1';\n    } else {\n      if (+hours > 24) {\n        hours = '24';\n      } else if (+hours < 0) {\n        hours = '0';\n      }\n    }\n\n\n    if (+minutes > 59) {\n      minutes = '59';\n    } else if (+minutes < 0) {\n      minutes = '0';\n    }\n\n    const d = this.value ? new Date(this.value.getTime()) : new Date();\n    d.setHours(+hours);\n    d.setMinutes(+minutes);\n    d.setSeconds(0);\n    d.setMilliseconds(0);\n\n    const isValueInRange = isDateInRange(this.minDate, this.maxDate, d);\n    if (!isValueInRange) { this.invalidInput.emit(); }\n\n\n    this.writeValue(d, true);\n    if (this.onChangeFn) { this.onChangeFn(d); }\n  }\n\n  @HostListener('keydown', ['$event']) keydownHandler(event: any) {\n    if (event.metaKey || event.ctrlKey || event.altKey) {\n      this.combination = this.combination.concat(event.code);\n      return;\n    }\n    if (!/^[0-9a-zA-Z\\s]{0,1}$/.test(event.key)) { return; }\n    const target = event.target;\n    const tValue = target.value;\n    const value = `${tValue.slice(0, target.selectionStart)}${event.key}${tValue.slice(target.selectionEnd)}`;\n    if (value.match(this.pattern) || this.combination.length > 0) { return true; }\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n\n  @HostListener('keyup', ['$event']) keyupHandler(event: any) {\n    this.combination = this.combination.filter(v => v !== event.code);\n  }\n\n  @HostListener('focus') focusHandler() {\n    this.isInputFocused = true;\n  }\n\n  @HostListener('focusout') focusoutHandler() {\n    this.isInputFocused = false;\n    this.setInputElementValue(this.formattedValueString);\n    if (this.onTouchedFn && !this.modalRef) { this.onTouchedFn(); }\n  }\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    public dialog: MatDialog,\n    private renderer: Renderer2,\n    private zone: NgZone,\n    private fm: FocusMonitor,\n    private elRef: ElementRef<HTMLElement>,\n    private ngZone: NgZone,\n    // tslint:disable-next-line:variable-name\n    protected _platform: Platform,\n    // tslint:disable-next-line:variable-name\n    @Optional() private _parentForm: NgForm,\n    // tslint:disable-next-line:variable-name\n    @Optional() private _matFormFiled: MatFormField,\n    // tslint:disable-next-line:variable-name\n    @Optional() private _parentFormGroup: FormGroupDirective,\n    // tslint:disable-next-line:variable-name\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    this.id = this.id;\n\n    this.errorStateMatcher = _defaultErrorStateMatcher;\n    if (this.ngControl != null) { this.ngControl.valueAccessor = this; }\n\n    if (_platform.IOS) {\n      ngZone.runOutsideAngular(() => {\n        elRef.nativeElement.addEventListener('keyup', (event: Event) => {\n          const el = event.target as HTMLInputElement;\n          if (!el.value && !el.selectionStart && !el.selectionEnd) {\n            // Note: Just setting `0, 0` doesn't fix the issue. Setting\n            // `1, 1` fixes it for the first time that you type text and\n            // then hold delete. Toggling to `1, 1` and then back to\n            // `0, 0` seems to completely fix it.\n            el.setSelectionRange(1, 1);\n            el.setSelectionRange(0, 0);\n          }\n        });\n      });\n    }\n\n    this._isServer = !this._platform.isBrowser;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this.elRef.nativeElement.focus();\n    }\n  }\n\n  setInputElementValue(value: any) {\n    if (value === null || value === undefined) { value = ''; }\n    Promise.resolve().then(() => {\n      this.zone.runOutsideAngular(() => {\n        this.renderer.setProperty(this.elRef.nativeElement, 'value', value);\n      });\n    });\n  }\n\n  validate() {\n    if (this.currentValue === null || this.currentValue === undefined) { return null; }\n\n    const isValueInRange = this.strict ?\n      isDateInRange(this.minDate, this.maxDate, this.currentValue) :\n      isTimeInRange(this.minDate, this.maxDate, this.currentValue);\n\n    return isValueInRange ? null : { dateRange: true };\n  }\n\n  ngAfterViewInit() {\n    this.listeners.push(\n      this.renderer.listen(\n        this._matFormFiled ? this._matFormFiled._elementRef.nativeElement : this.elRef.nativeElement\n        , 'click', this.clickHandler)\n    );\n  }\n\n  clickHandler = (e: FocusEvent) => {\n    if ((this.modalRef && this.modalRef.componentInstance.isClosing) || this.disabled || this.disableDialogOpenOnClick) { return; }\n    if (!this.modalRef && !this.disableDialogOpenOnClick) { this.showDialog(); }\n  }\n\n  ngOnInit() {\n    if (this._platform.isBrowser) {\n      this.fm.monitor(this.elRef.nativeElement, true).subscribe(origin => {\n        this.focused = !!origin;\n        this.stateChanges.next();\n      });\n\n    }\n\n    const hasMaxDate = !!this.maxDate;\n    const hasMinDate = !!this.minDate;\n\n    if (hasMinDate || hasMaxDate) {\n      if (hasMinDate) { this.minDate.setSeconds(0); this.minDate.setMilliseconds(0); }\n      if (hasMaxDate) { this.maxDate.setSeconds(0); this.maxDate.setMilliseconds(0); }\n      Promise.resolve().then(() => this.generateAllowedMap());\n\n      if (!(this.ngControl as any)._rawValidators.find(v => v === this)) {\n        this.ngControl.control.setValidators(((this.ngControl as any)._rawValidators as any[]).concat(this));\n        this.ngControl.control.updateValueAndValidity();\n      }\n    }\n\n    this._skipValueChangeEmission = false;\n  }\n\n  generateAllowedMap() {\n    const isStrictMode = this.strict && this.value instanceof Date;\n    if (this.mode === '24h') {\n      this.allowed24HourMap = {};\n      for (let h = 0; h < 24; h++) {\n        for (let m = 0; m < 60; m++) {\n          const hourMap = this.allowed24HourMap[h] || {};\n          if (isStrictMode) {\n            const currentDate = new Date(this.value.getTime());\n            currentDate.setHours(h);\n            currentDate.setMinutes(m);\n            currentDate.setSeconds(0);\n            currentDate.setMilliseconds(0);\n            hourMap[m] = isDateInRange(this.minDate, this.maxDate, currentDate);\n          } else {\n            hourMap[m] = isAllowed(h, m, this.minDate, this.maxDate, '24h');\n          }\n          this.allowed24HourMap[h] = hourMap;\n        }\n      }\n    } else {\n      this.allowed12HourMap = { am: {}, pm: {} };\n      for (let h = 0; h < 24; h++) {\n        const meridiem = h < 12 ? 'am' : 'pm';\n        for (let m = 0; m < 60; m++) {\n          const hour = (h > 12 ? h - 12 : h === 0 ? 12 : h);\n          const hourMap = this.allowed12HourMap[meridiem][hour] || {};\n          if (isStrictMode) {\n            const currentDate = new Date(this.value.getTime());\n            currentDate.setHours(h);\n            currentDate.setMinutes(m);\n            currentDate.setSeconds(0);\n            currentDate.setMilliseconds(0);\n            hourMap[m] = isDateInRange(this.minDate, this.maxDate, currentDate);\n          } else {\n            hourMap[m] = isAllowed(h, m, this.minDate, this.maxDate, '24h');\n          }\n          this.allowed12HourMap[meridiem][hour] = hourMap;\n        }\n      }\n    }\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n\n    this.pattern = this.mode === '24h' ? /^[0-9]{1,2}:?([0-9]{1,2})?$/ : /^[0-9]{1,2}:?([0-9]{1,2})?\\s?(a|p)?m?$/;\n\n    if (\n      (simpleChanges.minDate && !simpleChanges.minDate.isFirstChange() &&\n        +simpleChanges.minDate.currentValue !== simpleChanges.minDate.previousValue) ||\n      (simpleChanges.maxDate && !simpleChanges.maxDate.isFirstChange() &&\n        +simpleChanges.maxDate.currentValue !== simpleChanges.maxDate.previousValue) ||\n      (simpleChanges.disableLimitBase && !simpleChanges.disableLimitBase.isFirstChange() &&\n        +simpleChanges.disableLimitBase.currentValue !== simpleChanges.disableLimitBase.previousValue)\n    ) {\n      this.generateAllowedMap();\n      this.ngControl.control.updateValueAndValidity();\n    }\n\n    if (!this.modalRef || !this.modalRef.componentInstance) { return; }\n\n    this.modalRef.componentInstance.data = {\n      mode: this.mode,\n      value: this.currentValue,\n      okLabel: this.okLabel,\n      cancelLabel: this.cancelLabel,\n      okButtonTemplate: this.okButtonTemplate,\n      cancelButtonTemplate: this.cancelButtonTemplate,\n      anteMeridiemAbbreviation: this.anteMeridiemAbbreviation,\n      postMeridiemAbbreviation: this.postMeridiemAbbreviation,\n      color: this.color,\n      isPm: this.isPm,\n      minDate: this.minDate,\n      maxDate: this.maxDate,\n      allowed12HourMap: this.allowed12HourMap,\n      allowed24HourMap: this.allowed24HourMap,\n    };\n  }\n\n  checkValidity(value: Date) {\n    if (!value) { return false; }\n    const hour = value.getHours();\n    const minutes = value.getMinutes();\n    const meridiem = this.isPm ? 'PM' : 'AM';\n    return isAllowed(hour, minutes, this.minDate, this.maxDate, this.mode, meridiem);\n  }\n\n  writeValue(value: Date, isInnerCall = false): void {\n\n    if (!isInnerCall) {\n      this._skipValueChangeEmission = true;\n      Promise.resolve().then(() => this._skipValueChangeEmission = false);\n    }\n\n    if (value) {\n      value.setSeconds(0);\n      value.setMilliseconds(0);\n    }\n\n    if (+this.value !== +value) { this.value = value; }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeFn = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedFn = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  showDialog() {\n    if (this.disabled) { return; }\n    this.isInputFocused = false;\n    this.modalRef = this.dialog.open(MatTimepickerComponentDialogComponent, {\n      autoFocus: false,\n      data: {\n        mode: this.mode,\n        value: this.currentValue,\n        okLabel: this.okLabel,\n        cancelLabel: this.cancelLabel,\n        okButtonTemplate: this.okButtonTemplate,\n        cancelButtonTemplate: this.cancelButtonTemplate,\n        anteMeridiemAbbreviation: this.anteMeridiemAbbreviation,\n        postMeridiemAbbreviation: this.postMeridiemAbbreviation,\n        color: this.color,\n        isPm: this.isPm,\n        minDate: this.minDate,\n        maxDate: this.maxDate,\n        allowed12HourMap: this.allowed12HourMap,\n        allowed24HourMap: this.allowed24HourMap\n      }\n    });\n    const instance = this.modalRef.componentInstance;\n    instance.changeEvent.pipe(takeUntil(this.isAlive)).subscribe(this.handleChange);\n    instance.okClickEvent.pipe(takeUntil(this.isAlive)).subscribe(this.handleOk);\n    instance.cancelClickEvent.pipe(takeUntil(this.isAlive)).subscribe(this.handleCancel);\n    this.modalRef.beforeClosed().pipe(first()).subscribe(() => instance.isClosing = true);\n    this.modalRef.afterClosed().pipe(first()).subscribe(() => {\n      if (this.onTouchedFn) { this.onTouchedFn(); }\n      this.modalRef = null;\n      this.elRef.nativeElement.focus();\n    });\n\n    this.currentValue = this.value as Date;\n  }\n\n  handleChange = (newValue) => {\n    if (!(newValue instanceof Date)) { return; }\n    const v = this.value instanceof Date ? new Date(this.value.getTime()) : new Date();\n    v.setHours(newValue.getHours());\n    v.setMinutes(newValue.getMinutes());\n    v.setSeconds(0);\n    v.setMilliseconds(0);\n    this.currentValue = v;\n  }\n\n  handleOk = (value) => {\n    if (!this.currentValue && value) { this.currentValue = value; }\n    if (this.onChangeFn) { this.onChangeFn(this.currentValue); }\n    this.value = this.currentValue;\n    this.modalRef.close();\n  }\n\n  handleCancel = () => {\n    this.modalRef.close();\n  }\n\n  ngOnDestroy() {\n    this.isAlive.next();\n    this.isAlive.complete();\n    this.stateChanges.complete();\n\n    if (this._platform.isBrowser) {\n      this.fm.stopMonitoring(this.elRef.nativeElement);\n    }\n\n    this.listeners.forEach(l => l());\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { ClockViewType, ClockNumber, ITimeData, ClockMode } from '../interfaces-and-types';\nimport { isAllowed, getIsAvailabeFn } from '../util';\n\n@Component({\n  selector: 'mat-clock',\n  templateUrl: './clock.component.html',\n  styleUrls: ['./clock.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ClockComponent implements OnChanges {\n\n  @Input() mode: ClockMode;\n  @Input() viewType: ClockViewType;\n  @Input() color = 'primary';\n  @Input() formattedValue: number;\n  @Input() minDate: Date;\n  @Input() maxDate: Date;\n  @Input() isPm: boolean;\n  @Input() formattedHours: number;\n  @Input() minutes: number;\n  @Output() changeEvent: EventEmitter<any> = new EventEmitter<any>();\n  @Output() unavailableSelection: EventEmitter<any> = new EventEmitter<any>();\n  @Output() invalidMeridiem: EventEmitter<any> = new EventEmitter<any>();\n  @Output() invalidSelection: EventEmitter<any> = new EventEmitter<any>();\n  @Output() clearInvalidMeridiem: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input() allowed12HourMap = null;\n  @Input() allowed24HourMap = null;\n\n  isFormattedValueAllowed = true;\n\n  isAvailableFn: ReturnType<typeof getIsAvailabeFn>;\n\n  meridiem = null;\n  touching = false;\n  angle: number;\n  numbers: ClockNumber[] = [];\n  secondaryNumbers: ClockNumber[] = [];\n  minuteDots: ClockNumber[] = [];\n  invalidMeridiemEmitted = true;\n\n  initIsAllowedFn() {\n    if (!this.allowed12HourMap && !this.allowed24HourMap) { return; }\n    this.isAvailableFn = getIsAvailabeFn(this.allowed12HourMap, this.allowed24HourMap, this.mode);\n  }\n\n  isAvailable(value) {\n    return this.isAvailableFn ? this.isAvailableFn(value, this.viewType, this.isPm, this.formattedHours) : true;\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n\n    if (\n      simpleChanges.allowed12HourMap ||\n      simpleChanges.allowed24HourMap ||\n      (simpleChanges.mode && !simpleChanges.mode.firstChange)\n    ) {\n      this.initIsAllowedFn();\n    }\n\n    this.calculateAngule();\n    this.setNumbers();\n    this.meridiem = this.isPm ? 'PM' : 'AM';\n\n    if (simpleChanges.formattedValue && (this.allowed12HourMap || this.allowed24HourMap)) {\n      this.isFormattedValueAllowed = this.isAvailable(this.formattedValue);\n    }\n\n    const isSelectedTimeAvailable = (this.isAvailableFn) ?\n      // when calling isAvailableFn here we should always set the viewType to minutes because we want to check the hours and the minutes\n      this.isAvailableFn(this.minutes, 'minutes', this.isPm, this.formattedHours) : true;\n\n    // if (this.mode === '24h' && this.viewType === 'minutes' && this.isAvailableFn) {\n    //   const areMinitesAvailable = this.isAvailableFn(this.minutes, 'minutes', this.isPm, this.formattedHours);\n    //   if (!areMinitesAvailable) {\n    //     if (this.minDate && this.minDate.getMinutes() > this.minutes) {\n    //       setTimeout(() => { this.changeEvent.emit({ value: this.minDate.getMinutes(), type: 'minutes' }); });\n    //     } else {\n    //       setTimeout(() => { this.changeEvent.emit({ value: this.maxDate.getMinutes(), type: 'minutes' }); });\n    //     }\n    //   }\n    // }\n\n    if (isSelectedTimeAvailable && this.invalidMeridiemEmitted) {\n      this.clearInvalidMeridiem.emit();\n      this.invalidMeridiemEmitted = false;\n    }\n\n    this.invalidSelection.emit(!isSelectedTimeAvailable);\n  }\n\n  calculateAngule() {\n    this.angle = this.getPointerAngle(this.formattedValue, this.viewType);\n  }\n\n  setNumbers() {\n    if (this.viewType === 'hours') {\n      if (this.mode === '12h') {\n        const meridiem = this.isPm ? 'pm' : 'am';\n        const isAllowedFn = this.allowed12HourMap ? num => this.allowed12HourMap[meridiem][num + 1][0] : undefined;\n        this.numbers = this.getNumbers(12, { size: 256 }, isAllowedFn);\n        this.secondaryNumbers = [];\n        this.minuteDots = [];\n      } else if (this.mode === '24h') {\n        const isAllowedFn = this.allowed24HourMap ? num => this.allowed24HourMap[num][0] : undefined;\n        this.numbers = this.getNumbers(12, { size: 256 }, isAllowedFn);\n        this.secondaryNumbers = this.getNumbers(12, { size: 256 - 64, start: 13 }, isAllowedFn);\n        this.minuteDots = [];\n      }\n    } else {\n      const meridiem = this.isPm ? 'pm' : 'am';\n      const isAllowedFn =\n        !!this.allowed12HourMap ? num => this.allowed12HourMap[meridiem][this.formattedHours][num] :\n          !!this.allowed24HourMap ? num => this.allowed24HourMap[this.formattedHours][num] : undefined;\n\n      this.numbers = this.getNumbers(12, { size: 256, start: 5, step: 5 }, isAllowedFn);\n      this.minuteDots = this.getNumbers(60, { size: 256, start: 13 }).map(digit => {\n        if (digit.display <= 59) {\n          digit.allowed = isAllowedFn ? isAllowedFn(digit.display) : true;\n          return digit;\n        }\n        digit.display = digit.display - 60;\n        digit.allowed = isAllowedFn ? isAllowedFn(digit.display) : true;\n        return digit;\n      });\n      this.secondaryNumbers = [];\n    }\n  }\n\n  disableAnimatedPointer() {\n    this.touching = true;\n  }\n\n  enableAnimatedPointer() {\n    this.touching = false;\n  }\n\n  handleTouchMove = (e: any) => {\n    e.preventDefault(); // prevent scrolling behind the clock on iOS\n    const rect = e.target.getBoundingClientRect();\n    this.movePointer(e.changedTouches[0].clientX - rect.left, e.changedTouches[0].clientY - rect.top);\n  }\n\n  handleTouchEnd(e: any) {\n    this.handleTouchMove(e);\n    this.enableAnimatedPointer();\n  }\n\n  handleMouseMove(e: any) {\n    // MouseEvent.which is deprecated, but MouseEvent.buttons is not supported in Safari\n    if ((e.buttons === 1 || e.which === 1) && this.touching) {\n      const rect = e.target.getBoundingClientRect();\n      this.movePointer(e.clientX - rect.left, e.clientY - rect.top);\n    }\n  }\n\n  handleClick(e: any) {\n    const rect = e.target.getBoundingClientRect();\n    this.movePointer(e.clientX - rect.left, e.clientY - rect.top);\n  }\n\n  movePointer(x, y) {\n    const value = this.getPointerValue(x, y, 256);\n    if (!this.isAvailable(value)) {\n      this.unavailableSelection.emit();\n      return;\n    }\n    if (value !== this.formattedValue) {\n      this.changeEvent.emit({ value, type: this.viewType });\n      if (this.viewType !== 'minutes') {\n        if (!this.isAvailable(value)) {\n          if (this.minDate && this.isAvailable(value)\n          ) {\n            this.changeEvent.emit({ value: this.minDate.getMinutes(), type: 'minutes' });\n          } else if (this.maxDate && this.isAvailable(value)) {\n            this.changeEvent.emit({ value: this.maxDate.getMinutes(), type: 'minutes' });\n          }\n        }\n      }\n    }\n  }\n\n  getNumbers(count, { size, start = 1, step = 1 }, isAllowedFn?: (num: number) => boolean) {\n    return Array.apply(null, Array(count)).map((_, i) => ({\n      display: i * step + start,\n      translateX: (size / 2 - 20) * Math.cos(2 * Math.PI * (i - 2) / count),\n      translateY: (size / 2 - 20) * Math.sin(2 * Math.PI * (i - 2) / count),\n      allowed: isAllowedFn ? isAllowedFn(i) : true\n    }));\n  }\n\n  getPointerAngle(value, mode: ClockViewType) {\n    if (this.viewType === 'hours') {\n      return this.mode === '12h' ? 360 / 12 * (value - 3) : 360 / 12 * (value % 12 - 3);\n    }\n    return 360 / 60 * (value - 15);\n  }\n\n  getPointerValue(x, y, size) {\n    let value;\n    let angle = Math.atan2(size / 2 - x, size / 2 - y) / Math.PI * 180;\n    if (angle < 0) {\n      angle = 360 + angle;\n    }\n\n    if (this.viewType === 'hours') {\n      if (this.mode === '12h') {\n        value = 12 - Math.round(angle * 12 / 360);\n        return value === 0 ? 12 : value;\n      }\n\n      const radius = Math.sqrt(Math.pow(size / 2 - x, 2) + Math.pow(size / 2 - y, 2));\n      value = 12 - Math.round(angle * 12 / 360);\n      if (value === 0) { value = 12; }\n      if (radius < size / 2 - 32) { value = value === 12 ? 0 : value + 12; }\n      return value;\n\n    }\n\n    value = Math.round(60 - 60 * angle / 360);\n    return value === 60 ? 0 : value;\n  }\n}\n","import { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClockComponent } from './clock/clock.component';\nimport { MatTimepickerComponentDialogComponent } from './timepicker-dialog/timepicker-dialog.component';\nimport { MatTimepickerDirective } from './timepicker.directive';\n\n@NgModule({\n  declarations: [\n    ClockComponent,\n    MatTimepickerDirective,\n    MatTimepickerComponentDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatInputModule\n  ],\n  exports: [\n    MatTimepickerDirective\n  ],\n  entryComponents: [\n    MatTimepickerComponentDialogComponent\n  ]\n})\nexport class MatTimepickerModule { }\n","/*\n * Public API Surface of mat-timepicker\n */\n\nexport * from './lib/timepicker.directive';\nexport * from './lib/mat-timepicker.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ClockComponent as ɵa} from './lib/clock/clock.component';\nexport {MatTimepickerComponentDialogComponent as ɵb} from './lib/timepicker-dialog/timepicker-dialog.component';"]}