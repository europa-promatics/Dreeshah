import { EventEmitter, DoCheck, TemplateRef } from '@angular/core';
import { ClockViewType, ClockMode, IAllowed24HourMap, IAllowed12HourMap } from '../interfaces-and-types';
import { twoDigits } from '../util';
import { MatTimepickerButtonTemplateContext } from '../timepicker.directive';
import * as ɵngcc0 from '@angular/core';
export declare class MatTimepickerComponentDialogComponent implements DoCheck {
    data: any;
    twoDigits: typeof twoDigits;
    changeEvent: EventEmitter<any>;
    okClickEvent: EventEmitter<any>;
    cancelClickEvent: EventEmitter<any>;
    allowed24HourMap: IAllowed24HourMap;
    allowed12HourMap: IAllowed12HourMap;
    invalidSelection: boolean;
    okLabel: string;
    cancelLabel: string;
    okButtonTemplate: TemplateRef<MatTimepickerButtonTemplateContext>;
    cancelButtonTemplate: TemplateRef<MatTimepickerButtonTemplateContext>;
    anteMeridiemAbbreviation: string;
    postMeridiemAbbreviation: string;
    set value(value: any);
    get value(): any;
    mode: ClockMode;
    viewType: ClockViewType;
    minutes: any;
    color: string;
    isPm: boolean;
    skipMinuteAutoSwitch: boolean;
    autoSwitchID: any;
    invalidMedianID: any;
    hasInvalidMeridiem: boolean;
    editHoursClicked: boolean;
    isClosing: boolean;
    minDate: Date;
    maxDate: Date;
    _formattedHour: any;
    _hours: any;
    _value: Date;
    set hours(value: any);
    get hours(): any;
    get formattedHours(): any;
    bindData(data: any): void;
    constructor(data: any);
    ngDoCheck(): void;
    handleClockChange({ value, type }: {
        value: number;
        type: 'minutes' | 'hours';
    }): void;
    clearInvalidMeridiem(): void;
    handleUnavailableSelection(): void;
    handleClockChangeDone(e: any): void;
    editHours(): void;
    editMinutes(): void;
    invalidSelectionHandler(value: any): void;
    invalidMeridiem(): void;
    meridiemChange(hours: any): void;
    setAm(): void;
    setPm(): void;
    okClickHandler: () => void;
    cancelClickHandler: () => void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatTimepickerComponentDialogComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatTimepickerComponentDialogComponent, "mat-timepicker-dialog", never, {}, {
    "changeEvent": "changeEvent";
    "okClickEvent": "okClickEvent";
    "cancelClickEvent": "cancelClickEvent";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXBpY2tlci1kaWFsb2cuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRpbWVwaWNrZXItZGlhbG9nLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdURBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBEb0NoZWNrLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2xvY2tWaWV3VHlwZSwgQ2xvY2tNb2RlLCBJQWxsb3dlZDI0SG91ck1hcCwgSUFsbG93ZWQxMkhvdXJNYXAgfSBmcm9tICcuLi9pbnRlcmZhY2VzLWFuZC10eXBlcyc7XG5pbXBvcnQgeyB0d29EaWdpdHMgfSBmcm9tICcuLi91dGlsJztcbmltcG9ydCB7IE1hdFRpbWVwaWNrZXJCdXR0b25UZW1wbGF0ZUNvbnRleHQgfSBmcm9tICcuLi90aW1lcGlja2VyLmRpcmVjdGl2ZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBNYXRUaW1lcGlja2VyQ29tcG9uZW50RGlhbG9nQ29tcG9uZW50IGltcGxlbWVudHMgRG9DaGVjayB7XG4gICAgZGF0YTogYW55O1xuICAgIHR3b0RpZ2l0czogdHlwZW9mIHR3b0RpZ2l0cztcbiAgICBjaGFuZ2VFdmVudDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb2tDbGlja0V2ZW50OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBjYW5jZWxDbGlja0V2ZW50OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBhbGxvd2VkMjRIb3VyTWFwOiBJQWxsb3dlZDI0SG91ck1hcDtcbiAgICBhbGxvd2VkMTJIb3VyTWFwOiBJQWxsb3dlZDEySG91ck1hcDtcbiAgICBpbnZhbGlkU2VsZWN0aW9uOiBib29sZWFuO1xuICAgIG9rTGFiZWw6IHN0cmluZztcbiAgICBjYW5jZWxMYWJlbDogc3RyaW5nO1xuICAgIG9rQnV0dG9uVGVtcGxhdGU6IFRlbXBsYXRlUmVmPE1hdFRpbWVwaWNrZXJCdXR0b25UZW1wbGF0ZUNvbnRleHQ+O1xuICAgIGNhbmNlbEJ1dHRvblRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxNYXRUaW1lcGlja2VyQnV0dG9uVGVtcGxhdGVDb250ZXh0PjtcbiAgICBhbnRlTWVyaWRpZW1BYmJyZXZpYXRpb246IHN0cmluZztcbiAgICBwb3N0TWVyaWRpZW1BYmJyZXZpYXRpb246IHN0cmluZztcbiAgICBzZXQgdmFsdWUodmFsdWU6IGFueSk7XG4gICAgZ2V0IHZhbHVlKCk6IGFueTtcbiAgICBtb2RlOiBDbG9ja01vZGU7XG4gICAgdmlld1R5cGU6IENsb2NrVmlld1R5cGU7XG4gICAgbWludXRlczogYW55O1xuICAgIGNvbG9yOiBzdHJpbmc7XG4gICAgaXNQbTogYm9vbGVhbjtcbiAgICBza2lwTWludXRlQXV0b1N3aXRjaDogYm9vbGVhbjtcbiAgICBhdXRvU3dpdGNoSUQ6IGFueTtcbiAgICBpbnZhbGlkTWVkaWFuSUQ6IGFueTtcbiAgICBoYXNJbnZhbGlkTWVyaWRpZW06IGJvb2xlYW47XG4gICAgZWRpdEhvdXJzQ2xpY2tlZDogYm9vbGVhbjtcbiAgICBpc0Nsb3Npbmc6IGJvb2xlYW47XG4gICAgbWluRGF0ZTogRGF0ZTtcbiAgICBtYXhEYXRlOiBEYXRlO1xuICAgIF9mb3JtYXR0ZWRIb3VyOiBhbnk7XG4gICAgX2hvdXJzOiBhbnk7XG4gICAgX3ZhbHVlOiBEYXRlO1xuICAgIHNldCBob3Vycyh2YWx1ZTogYW55KTtcbiAgICBnZXQgaG91cnMoKTogYW55O1xuICAgIGdldCBmb3JtYXR0ZWRIb3VycygpOiBhbnk7XG4gICAgYmluZERhdGEoZGF0YTogYW55KTogdm9pZDtcbiAgICBjb25zdHJ1Y3RvcihkYXRhOiBhbnkpO1xuICAgIG5nRG9DaGVjaygpOiB2b2lkO1xuICAgIGhhbmRsZUNsb2NrQ2hhbmdlKHsgdmFsdWUsIHR5cGUgfToge1xuICAgICAgICB2YWx1ZTogbnVtYmVyO1xuICAgICAgICB0eXBlOiAnbWludXRlcycgfCAnaG91cnMnO1xuICAgIH0pOiB2b2lkO1xuICAgIGNsZWFySW52YWxpZE1lcmlkaWVtKCk6IHZvaWQ7XG4gICAgaGFuZGxlVW5hdmFpbGFibGVTZWxlY3Rpb24oKTogdm9pZDtcbiAgICBoYW5kbGVDbG9ja0NoYW5nZURvbmUoZTogYW55KTogdm9pZDtcbiAgICBlZGl0SG91cnMoKTogdm9pZDtcbiAgICBlZGl0TWludXRlcygpOiB2b2lkO1xuICAgIGludmFsaWRTZWxlY3Rpb25IYW5kbGVyKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIGludmFsaWRNZXJpZGllbSgpOiB2b2lkO1xuICAgIG1lcmlkaWVtQ2hhbmdlKGhvdXJzOiBhbnkpOiB2b2lkO1xuICAgIHNldEFtKCk6IHZvaWQ7XG4gICAgc2V0UG0oKTogdm9pZDtcbiAgICBva0NsaWNrSGFuZGxlcjogKCkgPT4gdm9pZDtcbiAgICBjYW5jZWxDbGlja0hhbmRsZXI6ICgpID0+IHZvaWQ7XG59XG4iXX0=