import { EventEmitter } from '@angular/core';
import { SafeStyle, DomSanitizer } from '@angular/platform-browser';
import * as ɵngcc0 from '@angular/core';
export declare class NgxDropzonePreviewComponent {
    protected sanitizer: DomSanitizer;
    constructor(sanitizer: DomSanitizer);
    protected _file: File;
    /** The file to preview. */
    set file(value: File);
    get file(): File;
    /** Allow the user to remove files. */
    get removable(): boolean;
    set removable(value: boolean);
    protected _removable: boolean;
    /** Emitted when the element should be removed. */
    readonly removed: EventEmitter<File>;
    keyEvent(event: KeyboardEvent): void;
    /** We use the HostBinding to pass these common styles to child components. */
    get hostStyle(): SafeStyle;
    /** Make the preview item focusable using the tab key. */
    tabIndex: number;
    /** Remove method to be used from the template. */
    _remove(event: any): void;
    /** Remove the preview item (use from component code). */
    remove(): void;
    protected readFile(): Promise<string | ArrayBuffer>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxDropzonePreviewComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxDropzonePreviewComponent, "ngx-dropzone-preview", never, {
    "file": "file";
    "removable": "removable";
}, {
    "removed": "removed";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWRyb3B6b25lLXByZXZpZXcuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm5neC1kcm9wem9uZS1wcmV2aWV3LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUJBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTYWZlU3R5bGUsIERvbVNhbml0aXplciB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmd4RHJvcHpvbmVQcmV2aWV3Q29tcG9uZW50IHtcbiAgICBwcm90ZWN0ZWQgc2FuaXRpemVyOiBEb21TYW5pdGl6ZXI7XG4gICAgY29uc3RydWN0b3Ioc2FuaXRpemVyOiBEb21TYW5pdGl6ZXIpO1xuICAgIHByb3RlY3RlZCBfZmlsZTogRmlsZTtcbiAgICAvKiogVGhlIGZpbGUgdG8gcHJldmlldy4gKi9cbiAgICBzZXQgZmlsZSh2YWx1ZTogRmlsZSk7XG4gICAgZ2V0IGZpbGUoKTogRmlsZTtcbiAgICAvKiogQWxsb3cgdGhlIHVzZXIgdG8gcmVtb3ZlIGZpbGVzLiAqL1xuICAgIGdldCByZW1vdmFibGUoKTogYm9vbGVhbjtcbiAgICBzZXQgcmVtb3ZhYmxlKHZhbHVlOiBib29sZWFuKTtcbiAgICBwcm90ZWN0ZWQgX3JlbW92YWJsZTogYm9vbGVhbjtcbiAgICAvKiogRW1pdHRlZCB3aGVuIHRoZSBlbGVtZW50IHNob3VsZCBiZSByZW1vdmVkLiAqL1xuICAgIHJlYWRvbmx5IHJlbW92ZWQ6IEV2ZW50RW1pdHRlcjxGaWxlPjtcbiAgICBrZXlFdmVudChldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgLyoqIFdlIHVzZSB0aGUgSG9zdEJpbmRpbmcgdG8gcGFzcyB0aGVzZSBjb21tb24gc3R5bGVzIHRvIGNoaWxkIGNvbXBvbmVudHMuICovXG4gICAgZ2V0IGhvc3RTdHlsZSgpOiBTYWZlU3R5bGU7XG4gICAgLyoqIE1ha2UgdGhlIHByZXZpZXcgaXRlbSBmb2N1c2FibGUgdXNpbmcgdGhlIHRhYiBrZXkuICovXG4gICAgdGFiSW5kZXg6IG51bWJlcjtcbiAgICAvKiogUmVtb3ZlIG1ldGhvZCB0byBiZSB1c2VkIGZyb20gdGhlIHRlbXBsYXRlLiAqL1xuICAgIF9yZW1vdmUoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgLyoqIFJlbW92ZSB0aGUgcHJldmlldyBpdGVtICh1c2UgZnJvbSBjb21wb25lbnQgY29kZSkuICovXG4gICAgcmVtb3ZlKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHJlYWRGaWxlKCk6IFByb21pc2U8c3RyaW5nIHwgQXJyYXlCdWZmZXI+O1xufVxuIl19