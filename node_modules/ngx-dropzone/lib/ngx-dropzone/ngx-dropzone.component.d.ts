import { EventEmitter, QueryList, ElementRef } from '@angular/core';
import { NgxDropzoneService } from '../ngx-dropzone.service';
import { NgxDropzonePreviewComponent } from '../ngx-dropzone-preview/ngx-dropzone-preview.component';
import * as ɵngcc0 from '@angular/core';
export interface NgxDropzoneChangeEvent {
    source: NgxDropzoneComponent;
    addedFiles: File[];
    rejectedFiles: File[];
}
export declare class NgxDropzoneComponent {
    private service;
    constructor(service: NgxDropzoneService);
    /** A list of the content-projected preview children. */
    _previewChildren: QueryList<NgxDropzonePreviewComponent>;
    get _hasPreviews(): boolean;
    /** A template reference to the native file input element. */
    _fileInput: ElementRef;
    /** Emitted when any files were added or rejected. */
    readonly change: EventEmitter<NgxDropzoneChangeEvent>;
    /** Set the accepted file types. Defaults to '*'. */
    accept: string;
    /** Disable any user interaction with the component. */
    get disabled(): boolean;
    set disabled(value: boolean);
    private _disabled;
    /** Allow the selection of multiple files. */
    get multiple(): boolean;
    set multiple(value: boolean);
    private _multiple;
    /** Set the maximum size a single file may have. */
    get maxFileSize(): number;
    set maxFileSize(value: number);
    private _maxFileSize;
    /** Allow the dropzone container to expand vertically. */
    get expandable(): boolean;
    set expandable(value: boolean);
    private _expandable;
    /** Open the file selector on click. */
    get disableClick(): boolean;
    set disableClick(value: boolean);
    private _disableClick;
    /** Expose the id, aria-label, aria-labelledby and aria-describedby of the native file input for proper accessibility. */
    id: string;
    ariaLabel: string;
    ariaLabelledby: string;
    ariaDescribedBy: string;
    _isHovered: boolean;
    /** Show the native OS file explorer to select files. */
    _onClick(): void;
    _onDragOver(event: any): void;
    _onDragLeave(): void;
    _onDrop(event: any): void;
    showFileSelector(): void;
    _onFilesSelected(event: any): void;
    private handleFileDrop;
    private preventDefault;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxDropzoneComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxDropzoneComponent, "ngx-dropzone, [ngx-dropzone]", never, {
    "accept": "accept";
    "disabled": "disabled";
    "multiple": "multiple";
    "maxFileSize": "maxFileSize";
    "expandable": "expandable";
    "disableClick": "disableClick";
    "id": "id";
    "ariaLabel": "aria-label";
    "ariaLabelledby": "aria-labelledby";
    "ariaDescribedBy": "aria-describedby";
}, {
    "change": "change";
}, ["_previewChildren"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWRyb3B6b25lLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuZ3gtZHJvcHpvbmUuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9EQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgUXVlcnlMaXN0LCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hEcm9wem9uZVNlcnZpY2UgfSBmcm9tICcuLi9uZ3gtZHJvcHpvbmUuc2VydmljZSc7XG5pbXBvcnQgeyBOZ3hEcm9wem9uZVByZXZpZXdDb21wb25lbnQgfSBmcm9tICcuLi9uZ3gtZHJvcHpvbmUtcHJldmlldy9uZ3gtZHJvcHpvbmUtcHJldmlldy5jb21wb25lbnQnO1xuZXhwb3J0IGludGVyZmFjZSBOZ3hEcm9wem9uZUNoYW5nZUV2ZW50IHtcbiAgICBzb3VyY2U6IE5neERyb3B6b25lQ29tcG9uZW50O1xuICAgIGFkZGVkRmlsZXM6IEZpbGVbXTtcbiAgICByZWplY3RlZEZpbGVzOiBGaWxlW107XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ3hEcm9wem9uZUNvbXBvbmVudCB7XG4gICAgcHJpdmF0ZSBzZXJ2aWNlO1xuICAgIGNvbnN0cnVjdG9yKHNlcnZpY2U6IE5neERyb3B6b25lU2VydmljZSk7XG4gICAgLyoqIEEgbGlzdCBvZiB0aGUgY29udGVudC1wcm9qZWN0ZWQgcHJldmlldyBjaGlsZHJlbi4gKi9cbiAgICBfcHJldmlld0NoaWxkcmVuOiBRdWVyeUxpc3Q8Tmd4RHJvcHpvbmVQcmV2aWV3Q29tcG9uZW50PjtcbiAgICBnZXQgX2hhc1ByZXZpZXdzKCk6IGJvb2xlYW47XG4gICAgLyoqIEEgdGVtcGxhdGUgcmVmZXJlbmNlIHRvIHRoZSBuYXRpdmUgZmlsZSBpbnB1dCBlbGVtZW50LiAqL1xuICAgIF9maWxlSW5wdXQ6IEVsZW1lbnRSZWY7XG4gICAgLyoqIEVtaXR0ZWQgd2hlbiBhbnkgZmlsZXMgd2VyZSBhZGRlZCBvciByZWplY3RlZC4gKi9cbiAgICByZWFkb25seSBjaGFuZ2U6IEV2ZW50RW1pdHRlcjxOZ3hEcm9wem9uZUNoYW5nZUV2ZW50PjtcbiAgICAvKiogU2V0IHRoZSBhY2NlcHRlZCBmaWxlIHR5cGVzLiBEZWZhdWx0cyB0byAnKicuICovXG4gICAgYWNjZXB0OiBzdHJpbmc7XG4gICAgLyoqIERpc2FibGUgYW55IHVzZXIgaW50ZXJhY3Rpb24gd2l0aCB0aGUgY29tcG9uZW50LiAqL1xuICAgIGdldCBkaXNhYmxlZCgpOiBib29sZWFuO1xuICAgIHNldCBkaXNhYmxlZCh2YWx1ZTogYm9vbGVhbik7XG4gICAgcHJpdmF0ZSBfZGlzYWJsZWQ7XG4gICAgLyoqIEFsbG93IHRoZSBzZWxlY3Rpb24gb2YgbXVsdGlwbGUgZmlsZXMuICovXG4gICAgZ2V0IG11bHRpcGxlKCk6IGJvb2xlYW47XG4gICAgc2V0IG11bHRpcGxlKHZhbHVlOiBib29sZWFuKTtcbiAgICBwcml2YXRlIF9tdWx0aXBsZTtcbiAgICAvKiogU2V0IHRoZSBtYXhpbXVtIHNpemUgYSBzaW5nbGUgZmlsZSBtYXkgaGF2ZS4gKi9cbiAgICBnZXQgbWF4RmlsZVNpemUoKTogbnVtYmVyO1xuICAgIHNldCBtYXhGaWxlU2l6ZSh2YWx1ZTogbnVtYmVyKTtcbiAgICBwcml2YXRlIF9tYXhGaWxlU2l6ZTtcbiAgICAvKiogQWxsb3cgdGhlIGRyb3B6b25lIGNvbnRhaW5lciB0byBleHBhbmQgdmVydGljYWxseS4gKi9cbiAgICBnZXQgZXhwYW5kYWJsZSgpOiBib29sZWFuO1xuICAgIHNldCBleHBhbmRhYmxlKHZhbHVlOiBib29sZWFuKTtcbiAgICBwcml2YXRlIF9leHBhbmRhYmxlO1xuICAgIC8qKiBPcGVuIHRoZSBmaWxlIHNlbGVjdG9yIG9uIGNsaWNrLiAqL1xuICAgIGdldCBkaXNhYmxlQ2xpY2soKTogYm9vbGVhbjtcbiAgICBzZXQgZGlzYWJsZUNsaWNrKHZhbHVlOiBib29sZWFuKTtcbiAgICBwcml2YXRlIF9kaXNhYmxlQ2xpY2s7XG4gICAgLyoqIEV4cG9zZSB0aGUgaWQsIGFyaWEtbGFiZWwsIGFyaWEtbGFiZWxsZWRieSBhbmQgYXJpYS1kZXNjcmliZWRieSBvZiB0aGUgbmF0aXZlIGZpbGUgaW5wdXQgZm9yIHByb3BlciBhY2Nlc3NpYmlsaXR5LiAqL1xuICAgIGlkOiBzdHJpbmc7XG4gICAgYXJpYUxhYmVsOiBzdHJpbmc7XG4gICAgYXJpYUxhYmVsbGVkYnk6IHN0cmluZztcbiAgICBhcmlhRGVzY3JpYmVkQnk6IHN0cmluZztcbiAgICBfaXNIb3ZlcmVkOiBib29sZWFuO1xuICAgIC8qKiBTaG93IHRoZSBuYXRpdmUgT1MgZmlsZSBleHBsb3JlciB0byBzZWxlY3QgZmlsZXMuICovXG4gICAgX29uQ2xpY2soKTogdm9pZDtcbiAgICBfb25EcmFnT3ZlcihldmVudDogYW55KTogdm9pZDtcbiAgICBfb25EcmFnTGVhdmUoKTogdm9pZDtcbiAgICBfb25Ecm9wKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHNob3dGaWxlU2VsZWN0b3IoKTogdm9pZDtcbiAgICBfb25GaWxlc1NlbGVjdGVkKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgaGFuZGxlRmlsZURyb3A7XG4gICAgcHJpdmF0ZSBwcmV2ZW50RGVmYXVsdDtcbn1cbiJdfQ==