{"version":3,"sources":["../../projects/ngx-mat-intl-tel-input/src/lib/ngx-mat-intl-tel-input.service.ts","../../../node_modules/tslib/tslib.es6.js","../projects/ngx-mat-intl-tel-input/src/lib/data/country-code.ts","../../projects/ngx-mat-intl-tel-input/src/lib/ngx-mat-intl-tel-input.validator.ts","../../projects/ngx-mat-intl-tel-input/src/lib/ngx-mat-intl-tel-input.component.ts","../../projects/ngx-mat-intl-tel-input/src/lib/search.pipe.ts","../../projects/ngx-mat-intl-tel-input/src/lib/ngx-mat-intl-tel-input.module.ts"],"names":["Injectable","args","providedIn","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","create","this","allCountries","Examples","001","AC","AD","AE","AF","AG","AI","AL","AM","AO","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GT","GU","GW","GY","HK","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TA","TC","TD","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XK","YE","YT","ZA","ZM","ZW","phoneNumberValidator","control","numberInstance","error","validatePhoneNumber","value","parsePhoneNumber","e","setValue","isValid","touched","markAsTouched","NgxMatIntlTelInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","NgxMatIntlTelInputComponent","_changeDetectorRef","countryCodeData","fm","elRef","_this","_super","preferredCountries","enablePlaceholder","onlyCountries","enableSearch","_required","_disabled","stateChanges","Subject","focused","id","nextId","describedBy","phoneNumber","preferredCountriesInDropDown","countryChanged","EventEmitter","_format","onTouched","propagateChange","_","monitor","subscribe","origin","next","fetchCountryData","valueAccessor","__","constructor","__extends","defineProperty","formattedPhoneNumber","getPhoneNumberPlaceHolder","countryISOCode","getExampleNumber","number","toString","ngOnInit","searchPlaceholder","length","forEach","iso2","preferredCountry","filter","c","shift","push","includes","country","selectedCountry","getCountry","emit","markForCheck","ngDoCheck","updateErrorState","onPhoneNumberChange","parsePhoneNumberFromString","toUpperCase","formatAsYouTypeIfEnabled","onCountrySelect","el","nationalNumber","focus","code","find","toLowerCase","name","dialCode","undefined","priority","areaCodes","flagClass","placeHolder","onInputKeyPress","event","test","key","preventDefault","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","writeValue","countryCode_1","setTimeout","empty","_placeholder","coerceBooleanProperty","setDescribedByIds","ids","join","onContainerClick","target","tagName","nativeElement","querySelector","reset","ngOnDestroy","complete","stopMonitoring","format","formatNational","formatInternational","asYouType","AsYouType","startsWith","previousFormattedNumber","input","mixinErrorState","Component","selector","template","providers","CountryCode","provide","MatFormFieldControl","useExisting","NG_VALIDATORS","useValue","Éµ0","multi","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","FocusMonitor","ElementRef","NgControl","decorators","type","Optional","Self","NgForm","FormGroupDirective","ErrorStateMatcher","Input","ViewChild","MatMenu","HostBinding","Output","SearchPipe","transform","searchCriteria","Pipe","NgModule","declarations","imports","CommonModule","FormsModule","MatInputModule","MatMenuModule","MatButtonModule","MatDividerModule","ReactiveFormsModule","exports"],"mappings":"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ACJC,GAAI,WACJC,GAAI,YACJC,GAAI,WACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,aACJC,GAAI,aACJC,GAAI,UACJC,GAAI,aACJC,GAAI,aACJC,GAAI,UACJC,GAAI,aACJC,GAAI,aACJC,GAAI,aACJC,GAAI,YACJC,GAAI,aACJC,GAAI,YACJC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,UACJC,GAAI,aACJC,GAAI,aACJC,GAAI,aACJC,GAAI,WACJC,GAAI,aACJC,GAAI,aACJC,GAAI,aACJC,GAAI,WACJC,GAAI,aACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,WACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,YACJC,GAAI,UACJC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,aACJC,GAAI,YACJC,GAAI,WACJC,GAAI,aACJC,GAAI,WACJC,GAAI,WACJC,GAAI,UACJC,GAAI,YACJC,GAAI,cACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,SACJC,GAAI,WACJC,GAAI,SACJC,GAAI,aACJC,GAAI,WACJC,GAAI,YACJC,GAAI,WACJC,GAAI,aACJC,GAAI,UACJC,GAAI,UACJC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,aACJC,GAAI,aACJC,GAAI,YACJC,GAAI,SACJC,GAAI,aACJC,GAAI,YACJC,GAAI,YACJC,GAAI,UACJC,GAAI,YACJC,GAAI,WACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,aACJC,GAAI,YACJC,GAAI,YACJC,GAAI,UACJC,GAAI,UACJC,GAAI,YACJC,GAAI,YACJC,GAAI,WACJC,GAAI,QACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,WACJC,GAAI,UACJC,GAAI,YACJC,GAAI,UACJC,GAAI,WACJC,GAAI,aACJC,GAAI,YACJC,GAAI,WACJC,GAAI,OACJC,GAAI,aACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,YACJC,GAAI,OACJC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,UACJC,GAAI,aACJC,GAAI,aACJC,GAAI,SACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,aACJC,GAAI,WACJC,GAAI,YACJC,GAAI,aACJC,GAAI,aACJC,GAAI,aACJC,GAAI,aACJC,GAAI,aACJC,GAAI,YACJC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,WACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,YACJC,GAAI,aC3eOC,EAAuB,SAACC,GACnC,IACIC,EADEC,EAAQ,CAACC,qBAAqB,GAEpC,GAAIH,EAAQI,MAAO,CACjB,IACEH,EAAiBI,EAAAA,iBAAiBL,EAAQI,OAC1C,MAAOE,GAEP,OADAN,EAAQO,SAAS,MACVL,EAGT,GAAID,IAAmBA,EAAeO,UAKpC,OAJAR,EAAQO,SAAS,MACZP,EAAQS,SACXT,EAAQU,gBAEHR,EAGX,OAAO,MCSTS,EAEE,SAAmBC,EAEAC,EAEAC,EAEAC,GANAzQ,KAAAsQ,0BAAAA,EAEAtQ,KAAAuQ,YAAAA,EAEAvQ,KAAAwQ,iBAAAA,EAEAxQ,KAAAyQ,UAAAA,KAkBLhB,gBAuEd,SAAAiB,EACUC,EACAC,EACAC,EACAC,EACmBL,EAEfF,EAEAC,EAEZF,GAXF,IAAAS,EAaEC,EAAAlR,KAAAE,KAAMsQ,EAA2BC,EAAaC,EAAkBC,IAAUzQ,YAZlE+Q,EAAAJ,mBAAAA,EACAI,EAAAH,gBAAAA,EACAG,EAAAF,GAAAA,EACAE,EAAAD,MAAAA,EACmBC,EAAAN,UAAAA,EAjEpBM,EAAAE,mBAAoC,GACpCF,EAAAG,mBAAoB,EAIpBH,EAAAI,cAA+B,GAE/BJ,EAAAK,cAAe,EAkBhBL,EAAAM,WAAY,EAEZN,EAAAO,WAAY,EACpBP,EAAAQ,aAAe,IAAIC,EAAAA,QACnBT,EAAAU,SAAU,EACKV,EAAAW,GAAK,0BAA0BhB,EAA4BiB,SAC1EZ,EAAAa,YAAc,GACdb,EAAAc,YAA0B,GAC1Bd,EAAA9Q,aAA+B,GAC/B8Q,EAAAe,6BAA+C,GAM/Cf,EAAAgB,eAAwC,IAAIC,EAAAA,aAIpCjB,EAAAkB,QAA6B,UAUrClB,EAAAmB,UAAY,aAGZnB,EAAAoB,gBAAkB,SAACC,KAiBjBvB,EAAGwB,QAAQvB,GAAO,GAAMwB,WAAU,SAAAC,GAC5BxB,EAAKU,UAAYc,GACnBxB,EAAKmB,YAEPnB,EAAKU,UAAYc,EACjBxB,EAAKQ,aAAaiB,UAEpBzB,EAAK0B,mBACiB,MAAlB1B,EAAKN,YACPM,EAAKN,UAAUiC,cAAgB3B,qBHhIX1R,EAAGC,GAEzB,SAASqT,IAAO3S,KAAK4S,YAAcvT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOQ,OAAOT,IAAMqT,EAAG/S,UAAYN,EAAEM,UAAW,IAAI+S,GGsClCE,CAAAnC,EAAAM,GAc/CzR,OAAAuT,eACIpC,EAAA9Q,UAAA,SAAM,KADV,WAEE,OAAOI,KAAKiS,aAGd,SAAWnC,GACT9P,KAAKiS,QAAUnC,EACf9P,KAAK6R,YAAc7R,KAAK+S,qBACxB/S,KAAKuR,aAAaiB,wCA4Bb9B,EAAAsC,0BAAP,SAAiCC,GAC/B,IACE,OAAOC,EAAAA,iBAAiBD,EAAgB/S,GAAUiT,OAAOC,WACzD,MAAOpD,GACP,OAAOA,IAqCXU,EAAA9Q,UAAAyT,SAAA,WAAA,IAAAtC,EAAA/Q,KACOA,KAAKsT,oBACRtT,KAAKsT,kBAAoB,cAEvBtT,KAAKiR,mBAAmBsC,QAC1BvT,KAAKiR,mBAAmBuC,SAAQ,SAAAC,GAC9B,IAAMC,EAAmB3C,EAAK9Q,aAAa0T,QAAO,SAACC,GACjD,OAAOA,EAAEH,OAASA,KACjBI,QACH9C,EAAKe,6BAA6BgC,KAAKJ,MAGvC1T,KAAKmR,cAAcoC,SACrBvT,KAAKC,aAAeD,KAAKC,aAAa0T,QAAO,SAAAC,GAAK,OAAA7C,EAAKI,cAAc4C,SAASH,EAAEH,UAE9EzT,KAAK2P,gBAAkB3P,KAAK2P,eAAeqE,QAE7ChU,KAAKiU,gBAAkBjU,KAAKkU,WAAWlU,KAAK2P,eAAeqE,SAEvDhU,KAAK8R,6BAA6ByB,OACpCvT,KAAKiU,gBAAkBjU,KAAK8R,6BAA6B,GAEzD9R,KAAKiU,gBAAkBjU,KAAKC,aAAa,GAG7CD,KAAK+R,eAAeoC,KAAKnU,KAAKiU,iBAC9BjU,KAAK2Q,mBAAmByD,eACxBpU,KAAKuR,aAAaiB,QAGpB9B,EAAA9Q,UAAAyU,UAAA,WACMrU,KAAKyQ,WACPzQ,KAAKsU,oBAIF5D,EAAA9Q,UAAA2U,oBAAA,WACL,IACEvU,KAAK2P,eAAiB6E,EAAAA,2BAA2BxU,KAAK6R,YAAYuB,WAAYpT,KAAKiU,gBAAgBR,KAAKgB,eACxGzU,KAAK0U,2BACL1U,KAAK8P,MAAQ9P,KAAK2P,eAAewD,OAC7BnT,KAAK2P,gBAAkB3P,KAAK2P,eAAeO,YACzClQ,KAAK6R,cAAgB7R,KAAK+S,uBAC5B/S,KAAK6R,YAAc7R,KAAK+S,sBAEtB/S,KAAKiU,gBAAgBR,OAASzT,KAAK2P,eAAeqE,UACpDhU,KAAKiU,gBAAkBjU,KAAKkU,WAAWlU,KAAK2P,eAAeqE,SAC3DhU,KAAK+R,eAAeoC,KAAKnU,KAAKiU,mBAGlC,MAAOjE,GAGPhQ,KAAK8P,MAAQ9P,KAAK6R,YAAYuB,WAEhCpT,KAAKmS,gBAAgBnS,KAAK8P,OAC1B9P,KAAK2Q,mBAAmByD,gBAGnB1D,EAAA9Q,UAAA+U,gBAAA,SAAgBX,EAAkBY,GACnC5U,KAAK6R,cACP7R,KAAK6R,YAAc7R,KAAK2P,eAAekF,gBAEzC7U,KAAKiU,gBAAkBD,EACvBhU,KAAK+R,eAAeoC,KAAKnU,KAAKiU,iBAC9BjU,KAAKuU,sBACLK,EAAGE,SAGEpE,EAAA9Q,UAAAsU,WAAA,SAAWa,GAChB,OAAO/U,KAAKC,aAAa+U,MAAK,SAAApB,GAAK,OAAAA,EAAEH,OAASsB,EAAKE,kBAAkB,CACnEC,KAAM,KACNzB,KAAM,KACN0B,cAAUC,EACVC,SAAU,EACVC,eAAWF,EACXG,UAAW,KACXC,YAAa,KAIV9E,EAAA9Q,UAAA6V,gBAAA,SAAgBC,GACL,YACHC,KAAKD,EAAME,MACtBF,EAAMG,kBAIAnF,EAAA9Q,UAAA6S,iBAAA,WAAA,IAAA1B,EAAA/Q,KACRA,KAAK4Q,gBAAgB3Q,aAAauT,SAAQ,SAAAI,GACxC,IAAMI,EAAmB,CACvBkB,KAAMtB,EAAE,GAAGR,WACXK,KAAMG,EAAE,GAAGR,WACX+B,SAAUvB,EAAE,GAAGR,WACfiC,UAAWzB,EAAE,IAAM,EACnB0B,UAAW1B,EAAE,SAAkBwB,EAC/BG,UAAW3B,EAAE,GAAGR,WAAWqB,cAC3Be,YAAa,IAGXzE,EAAKG,oBACP8C,EAAQwB,YAAc9E,EAA4BsC,0BAA0BgB,EAAQP,KAAKgB,gBAG3F1D,EAAK9Q,aAAa6T,KAAKE,OAI3BtD,EAAA9Q,UAAAkW,iBAAA,SAAiBC,GACf/V,KAAKmS,gBAAkB4D,GAGzBrF,EAAA9Q,UAAAoW,kBAAA,SAAkBD,GAChB/V,KAAKkS,UAAY6D,GAGnBrF,EAAA9Q,UAAAqW,iBAAA,SAAiBC,GACflW,KAAKmW,SAAWD,EAChBlW,KAAK2Q,mBAAmByD,eACxBpU,KAAKuR,aAAaiB,QAGpB9B,EAAA9Q,UAAAwW,WAAA,SAAWtG,GAAX,IAAAiB,EAAA/Q,KACE,GAAI8P,EAEF,GADA9P,KAAK2P,eAAiB6E,EAAAA,2BAA2B1E,GAC7C9P,KAAK2P,eAAgB,CACvB,IAAM0G,EAAcrW,KAAK2P,eAAeqE,QAExC,GADAhU,KAAK6R,YAAc7R,KAAK+S,sBACnBsD,EACH,OAEFC,YAAW,WACTvF,EAAKkD,gBAAkBlD,EAAKmD,WAAWmC,GACnCtF,EAAKkD,gBAAgBkB,WAAapE,EAAKE,mBAAmB8C,SAAShD,EAAKkD,gBAAgBR,OAC1F1C,EAAKe,6BAA6BgC,KAAK/C,EAAKkD,iBAE9ClD,EAAKgB,eAAeoC,KAAKpD,EAAKkD,iBAG9BlD,EAAKJ,mBAAmByD,eACxBrD,EAAKQ,aAAaiB,SACjB,QAEHxS,KAAK6R,YAAc/B,EAKvB9P,KAAK2Q,mBAAmByD,eACxBpU,KAAKuR,aAAaiB,QAGpBjT,OAAAuT,eAAIpC,EAAA9Q,UAAA,QAAK,KAAT,WACE,OAAQI,KAAK6R,6CAGftS,OAAAuT,eACIpC,EAAA9Q,UAAA,mBAAgB,KADpB,WAEE,OAAOI,KAAKyR,UAAYzR,KAAKuW,uCAG/BhX,OAAAuT,eACIpC,EAAA9Q,UAAA,cAAW,KADf,WAEE,OAAOI,KAAKwW,kBAGd,SAAgB1G,GACd9P,KAAKwW,aAAe1G,EACpB9P,KAAKuR,aAAaiB,wCAGpBjT,OAAAuT,eACIpC,EAAA9Q,UAAA,WAAQ,KADZ,WAEE,OAAOI,KAAKqR,eAGd,SAAavB,GACX9P,KAAKqR,UAAYoF,EAAAA,sBAAsB3G,GACvC9P,KAAKuR,aAAaiB,wCAGpBjT,OAAAuT,eACIpC,EAAA9Q,UAAA,WAAQ,KADZ,WAEE,OAAOI,KAAKsR,eAGd,SAAaxB,GACX9P,KAAKsR,UAAYmF,EAAAA,sBAAsB3G,GACvC9P,KAAKuR,aAAaiB,wCAGpB9B,EAAA9Q,UAAA8W,kBAAA,SAAkBC,GAChB3W,KAAK4R,YAAc+E,EAAIC,KAAK,MAG9BlG,EAAA9Q,UAAAiX,iBAAA,SAAiBnB,GACyC,UAAnDA,EAAMoB,OAAmBC,QAAQ9B,eAEpCjV,KAAK8Q,MAAMkG,cAAcC,cAAc,SAAUnC,SAIrDpE,EAAA9Q,UAAAsX,MAAA,WACElX,KAAK6R,YAAc,GACnB7R,KAAKmS,gBAAgB,MAErBnS,KAAK2Q,mBAAmByD,eACxBpU,KAAKuR,aAAaiB,QAGpB9B,EAAA9Q,UAAAuX,YAAA,WACEnX,KAAKuR,aAAa6F,WAClBpX,KAAK6Q,GAAGwG,eAAerX,KAAK8Q,QAG9BvR,OAAAuT,eAAYpC,EAAA9Q,UAAA,uBAAoB,KAAhC,WACE,IAAKI,KAAK2P,eACR,OAAO3P,KAAK6R,YAAYuB,WAE1B,OAAQpT,KAAKsX,QACX,IAAK,WACH,OAAOtX,KAAK2P,eAAe4H,iBAC7B,IAAK,gBACH,OAAOvX,KAAK2P,eAAe6H,sBAC7B,QACE,OAAOxX,KAAK2P,eAAekF,eAAezB,6CAIxC1C,EAAA9Q,UAAA8U,yBAAA,WACN,GAAoB,YAAhB1U,KAAKsX,OAAT,CAGA,IAAMG,EAAuB,IAAIC,EAAAA,UAAU1X,KAAKiU,gBAAgBR,KAAKgB,eAEjEzU,KAAK6R,YAAYuB,WAAWuE,WAAW3X,KAAK4X,yBAA2B,MACzE5X,KAAK6R,YAAc4F,EAAUI,MAAM7X,KAAK6R,YAAYuB,aAEtDpT,KAAK4X,wBAA0B5X,KAAK6R,YAAYuB,gBA5VlD0E,EAAAA,gBAAgBzH,IAqBTK,EAAAiB,OAAS,sBAnBjBoG,EAAAA,UAAS7Y,KAAA,CAAC,CAET8Y,SAAU,yBACVC,SAAA,gxEAEAC,UAAW,CACTC,EACA,CAACC,QAASC,EAAAA,oBAAqBC,YAAa5H,GAC5C,CACE0H,QAASG,EAAAA,cACTC,SAAQC,EACRC,OAAO,IAGXC,gBAAiBC,EAAAA,wBAAwBC,wk4DA9CzCC,EAAAA,yBAIMX,SAQAY,EAAAA,oBAvBNC,EAAAA,kBAcyCC,EAAAA,UAASC,WAAA,CAAA,CAAAC,KAmH/CC,EAAAA,UAAQ,CAAAD,KAAIE,EAAAA,cAnHqCC,EAAAA,OAAMJ,WAAA,CAAA,CAAAC,KAqHvDC,EAAAA,kBArHGG,EAAAA,mBAAkBL,WAAA,CAAA,CAAAC,KAuHrBC,EAAAA,kBA7GiDI,EAAAA,iEAwCnDC,EAAAA,iCACAA,EAAAA,gCACAA,EAAAA,wBACAA,EAAAA,oBACAA,EAAAA,6BACAA,EAAAA,iCACAA,EAAAA,4BACAA,EAAAA,iCACAA,EAAAA,sBAEAA,EAAAA,uBAWAC,EAAAA,UAASxa,KAAA,CAACya,EAAAA,qBASVC,EAAAA,oCASAC,EAAAA,iCA4MAD,EAAAA,YAAW1a,KAAA,CAAC,2CAKZua,EAAAA,wBAUAA,EAAAA,wBAUAA,EAAAA,0BCzUH,SAAAK,YAGEA,EAAAla,UAAAma,UAAA,SAAU/F,EAAkBgG,GAC1B,OAAKA,GAAqC,KAAnBA,IAIbhG,EAAQkB,KAAI,IAAIlB,EAAQmB,UAC/BF,cACAlB,SACCiG,EAAe/E,yCAdtBgF,EAAAA,KAAI/a,KAAA,CAAC,CACJgW,KAAM,mBCqBR,iCAhBCgF,EAAAA,SAAQhb,KAAA,CAAC,CACRib,aAAc,CACZzJ,EACAoJ,GAEFM,QAAQ,CACNC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,qBAEFC,QAAS,CAAClK","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxMatIntlTelInputService {\r\n\r\n  constructor() { }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n@Injectable()\r\nexport class CountryCode {\r\n  public allCountries = [\r\n    ['Afghanistan (â«Ø§ÙØºØ§ÙØ³ØªØ§Ùâ¬â)', 'af', '93'],\r\n    ['Albania (ShqipÃ«ri)', 'al', '355'],\r\n    ['Algeria (â«Ø§ÙØ¬Ø²Ø§Ø¦Ø±â¬â)', 'dz', '213'],\r\n    ['American Samoa', 'as', '1684'],\r\n    ['Andorra', 'ad', '376'],\r\n    ['Angola', 'ao', '244'],\r\n    ['Anguilla', 'ai', '1264'],\r\n    ['Antigua and Barbuda', 'ag', '1268'],\r\n    ['Argentina', 'ar', '54'],\r\n    ['Armenia (ÕÕ¡ÕµÕ¡Õ½Õ¿Õ¡Õ¶)', 'am', '374'],\r\n    ['Aruba', 'aw', '297'],\r\n    ['Australia', 'au', '61', 0],\r\n    ['Austria (Ãsterreich)', 'at', '43'],\r\n    ['Azerbaijan (AzÉrbaycan)', 'az', '994'],\r\n    ['Bahamas', 'bs', '1242'],\r\n    ['Bahrain (â«Ø§ÙØ¨Ø­Ø±ÙÙâ¬â)', 'bh', '973'],\r\n    ['Bangladesh (à¦¬à¦¾à¦à¦²à¦¾à¦¦à§à¦¶)', 'bd', '880'],\r\n    ['Barbados', 'bb', '1246'],\r\n    ['Belarus (ÐÐµÐ»Ð°ÑÑÑÑ)', 'by', '375'],\r\n    ['Belgium (BelgiÃ«)', 'be', '32'],\r\n    ['Belize', 'bz', '501'],\r\n    ['Benin (BÃ©nin)', 'bj', '229'],\r\n    ['Bermuda', 'bm', '1441'],\r\n    ['Bhutan (à½ à½à¾²à½´à½)', 'bt', '975'],\r\n    ['Bolivia', 'bo', '591'],\r\n    ['Bosnia and Herzegovina (ÐÐ¾ÑÐ½Ð° Ð¸ Ð¥ÐµÑÑÐµÐ³Ð¾Ð²Ð¸Ð½Ð°)', 'ba', '387'],\r\n    ['Botswana', 'bw', '267'],\r\n    ['Brazil (Brasil)', 'br', '55'],\r\n    ['British Indian Ocean Territory', 'io', '246'],\r\n    ['British Virgin Islands', 'vg', '1284'],\r\n    ['Brunei', 'bn', '673'],\r\n    ['Bulgaria (ÐÑÐ»Ð³Ð°ÑÐ¸Ñ)', 'bg', '359'],\r\n    ['Burkina Faso', 'bf', '226'],\r\n    ['Burundi (Uburundi)', 'bi', '257'],\r\n    ['Cambodia (ááááá»áá¶)', 'kh', '855'],\r\n    ['Cameroon (Cameroun)', 'cm', '237'],\r\n    ['Canada', 'ca', '1', 1, ['204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416', '418', '431', '437',\r\n      '438', '450', '506', '514', '519', '548', '579', '581', '587', '604', '613', '639', '647', '672', '705', '709', '742',\r\n      '778', '780', '782', '807', '819', '825', '867', '873', '902', '905']],\r\n    ['Cape Verde (Kabu Verdi)', 'cv', '238'],\r\n    ['Caribbean Netherlands', 'bq', '599', 1],\r\n    ['Cayman Islands', 'ky', '1345'],\r\n    ['Central African Republic (RÃ©publique centrafricaine)', 'cf', '236'],\r\n    ['Chad (Tchad)', 'td', '235'],\r\n    ['Chile', 'cl', '56'],\r\n    ['China (ä¸­å½)', 'cn', '86'],\r\n    ['Christmas Island', 'cx', '61', 2],\r\n    ['Cocos (Keeling) Islands', 'cc', '61', 1],\r\n    ['Colombia', 'co', '57'],\r\n    ['Comoros (â«Ø¬Ø²Ø± Ø§ÙÙÙØ±â¬â)', 'km', '269'],\r\n    ['Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)', 'cd', '243'],\r\n    ['Congo (Republic) (Congo-Brazzaville)', 'cg', '242'],\r\n    ['Cook Islands', 'ck', '682'],\r\n    ['Costa Rica', 'cr', '506'],\r\n    ['CÃ´te dâIvoire', 'ci', '225'],\r\n    ['Croatia (Hrvatska)', 'hr', '385'],\r\n    ['Cuba', 'cu', '53'],\r\n    ['CuraÃ§ao', 'cw', '599', 0],\r\n    ['Cyprus (ÎÏÏÏÎ¿Ï)', 'cy', '357'],\r\n    ['Czech Republic (ÄeskÃ¡ republika)', 'cz', '420'],\r\n    ['Denmark (Danmark)', 'dk', '45'],\r\n    ['Djibouti', 'dj', '253'],\r\n    ['Dominica', 'dm', '1767'],\r\n    ['Dominican Republic (RepÃºblica Dominicana)', 'do', '1', 2, ['809', '829', '849']], ['Ecuador', 'ec', '593'],\r\n    ['Egypt (â«ÙØµØ±â¬â)', 'eg', '20'],\r\n    ['El Salvador', 'sv', '503'],\r\n    ['Equatorial Guinea (Guinea Ecuatorial)', 'gq', '240'],\r\n    ['Eritrea', 'er', '291'],\r\n    ['Estonia (Eesti)', 'ee', '372'],\r\n    ['Ethiopia', 'et', '251'],\r\n    ['Falkland Islands (Islas Malvinas)', 'fk', '500'],\r\n    ['Faroe Islands (FÃ¸royar)', 'fo', '298'],\r\n    ['Fiji', 'fj', '679'],\r\n    ['Finland (Suomi)', 'fi', '358', 0],\r\n    ['France', 'fr', '33'],\r\n    ['French Guiana (Guyane franÃ§aise)', 'gf', '594'],\r\n    ['French Polynesia (PolynÃ©sie franÃ§aise)', 'pf', '689'],\r\n    ['Gabon', 'ga', '241'],\r\n    ['Gambia', 'gm', '220'],\r\n    ['Georgia (á¡áá¥áá ááááá)', 'ge', '995'],\r\n    ['Germany (Deutschland)', 'de', '49'],\r\n    ['Ghana (Gaana)', 'gh', '233'],\r\n    ['Gibraltar', 'gi', '350'],\r\n    ['Greece (ÎÎ»Î»Î¬Î´Î±)', 'gr', '30'],\r\n    ['Greenland (Kalaallit Nunaat)', 'gl', '299'],\r\n    ['Grenada', 'gd', '1473'],\r\n    ['Guadeloupe', 'gp', '590', 0],\r\n    ['Guam', 'gu', '1671'],\r\n    ['Guatemala', 'gt', '502'],\r\n    ['Guernsey', 'gg', '44', 1],\r\n    ['Guinea (GuinÃ©e)', 'gn', '224'],\r\n    ['Guinea-Bissau (GuinÃ© Bissau)', 'gw', '245'],\r\n    ['Guyana', 'gy', '592'],\r\n    ['Haiti', 'ht', '509'],\r\n    ['Honduras', 'hn', '504'],\r\n    ['Hong Kong (é¦æ¸¯)', 'hk', '852'],\r\n    ['Hungary (MagyarorszÃ¡g)', 'hu', '36'],\r\n    ['Iceland (Ãsland)', 'is', '354'],\r\n    ['India (à¤­à¤¾à¤°à¤¤)', 'in', '91'],\r\n    ['Indonesia', 'id', '62'],\r\n    ['Iran (â«Ø§ÛØ±Ø§Ùâ¬â)', 'ir', '98'],\r\n    ['Iraq (â«Ø§ÙØ¹Ø±Ø§Ùâ¬â)', 'iq', '964'],\r\n    ['Ireland', 'ie', '353'],\r\n    ['Isle of Man', 'im', '44', 2],\r\n    ['Israel (â«××©×¨××â¬â)', 'il', '972'],\r\n    ['Italy (Italia)', 'it', '39', 0],\r\n    ['Jamaica', 'jm', '1', 4, ['876', '658']], ['Japan (æ¥æ¬)', 'jp', '81'],\r\n    ['Jersey', 'je', '44', 3],\r\n    ['Jordan (â«Ø§ÙØ£Ø±Ø¯Ùâ¬â)', 'jo', '962'],\r\n    ['Kazakhstan (ÐÐ°Ð·Ð°ÑÑÑÐ°Ð½)', 'kz', '7', 1],\r\n    ['Kenya', 'ke', '254'],\r\n    ['Kiribati', 'ki', '686'],\r\n    ['Kosovo', 'xk', '383'],\r\n    ['Kuwait (â«Ø§ÙÙÙÙØªâ¬â)', 'kw', '965'],\r\n    ['Kyrgyzstan (ÐÑÑÐ³ÑÐ·ÑÑÐ°Ð½)', 'kg', '996'],\r\n    ['Laos (àº¥àº²àº§)', 'la', '856'],\r\n    ['Latvia (Latvija)', 'lv', '371'],\r\n    ['Lebanon (â«ÙØ¨ÙØ§Ùâ¬â)', 'lb', '961'],\r\n    ['Lesotho', 'ls', '266'],\r\n    ['Liberia', 'lr', '231'],\r\n    ['Libya (â«ÙÙØ¨ÙØ§â¬â)', 'ly', '218'],\r\n    ['Liechtenstein', 'li', '423'],\r\n    ['Lithuania (Lietuva)', 'lt', '370'],\r\n    ['Luxembourg', 'lu', '352'],\r\n    ['Macau (æ¾³é)', 'mo', '853'],\r\n    ['Macedonia (FYROM) (ÐÐ°ÐºÐµÐ´Ð¾Ð½Ð¸ÑÐ°)', 'mk', '389'],\r\n    ['Madagascar (Madagasikara)', 'mg', '261'],\r\n    ['Malawi', 'mw', '265'],\r\n    ['Malaysia', 'my', '60'],\r\n    ['Maldives', 'mv', '960'],\r\n    ['Mali', 'ml', '223'],\r\n    ['Malta', 'mt', '356'],\r\n    ['Marshall Islands', 'mh', '692'],\r\n    ['Martinique', 'mq', '596'],\r\n    ['Mauritania (â«ÙÙØ±ÙØªØ§ÙÙØ§â¬â)', 'mr', '222'],\r\n    ['Mauritius (Moris)', 'mu', '230'],\r\n    ['Mayotte', 'yt', '262', 1],\r\n    ['Mexico (MÃ©xico)', 'mx', '52'],\r\n    ['Micronesia', 'fm', '691'],\r\n    ['Moldova (Republica Moldova)', 'md', '373'],\r\n    ['Monaco', 'mc', '377'],\r\n    ['Mongolia (ÐÐ¾Ð½Ð³Ð¾Ð»)', 'mn', '976'],\r\n    ['Montenegro (Crna Gora)', 'me', '382'],\r\n    ['Montserrat', 'ms', '1664'],\r\n    ['Morocco (â«Ø§ÙÙØºØ±Ø¨â¬â)', 'ma', '212', 0],\r\n    ['Mozambique (MoÃ§ambique)', 'mz', '258'],\r\n    ['Myanmar (Burma) (áá¼ááºáá¬)', 'mm', '95'],\r\n    ['Namibia (NamibiÃ«)', 'na', '264'],\r\n    ['Nauru', 'nr', '674'],\r\n    ['Nepal (à¤¨à¥à¤ªà¤¾à¤²)', 'np', '977'],\r\n    ['Netherlands (Nederland)', 'nl', '31'],\r\n    ['New Caledonia (Nouvelle-CalÃ©donie)', 'nc', '687'],\r\n    ['New Zealand', 'nz', '64'],\r\n    ['Nicaragua', 'ni', '505'],\r\n    ['Niger (Nijar)', 'ne', '227'],\r\n    ['Nigeria', 'ng', '234'],\r\n    ['Niue', 'nu', '683'],\r\n    ['Norfolk Island', 'nf', '672'],\r\n    ['North Korea (ì¡°ì  ë¯¼ì£¼ì£¼ì ì¸ë¯¼ ê³µíêµ­)', 'kp', '850'],\r\n    ['Northern Mariana Islands', 'mp', '1670'],\r\n    ['Norway (Norge)', 'no', '47', 0],\r\n    ['Oman (â«Ø¹ÙÙØ§Ùâ¬â)', 'om', '968'],\r\n    ['Pakistan (â«Ù¾Ø§Ú©Ø³ØªØ§Ùâ¬â)', 'pk', '92'],\r\n    ['Palau', 'pw', '680'],\r\n    ['Palestine (â«ÙÙØ³Ø·ÙÙâ¬â)', 'ps', '970'],\r\n    ['Panama (PanamÃ¡)', 'pa', '507'],\r\n    ['Papua New Guinea', 'pg', '675'],\r\n    ['Paraguay', 'py', '595'],\r\n    ['Peru (PerÃº)', 'pe', '51'],\r\n    ['Philippines', 'ph', '63'],\r\n    ['Poland (Polska)', 'pl', '48'],\r\n    ['Portugal', 'pt', '351'],\r\n    ['Puerto Rico', 'pr', '1', 3, ['787', '939']], ['Qatar (â«ÙØ·Ø±â¬â)', 'qa', '974'],\r\n    ['RÃ©union (La RÃ©union)', 're', '262', 0],\r\n    ['Romania (RomÃ¢nia)', 'ro', '40'],\r\n    ['Russia (Ð Ð¾ÑÑÐ¸Ñ)', 'ru', '7', 0],\r\n    ['Rwanda', 'rw', '250'],\r\n    ['Saint BarthÃ©lemy', 'bl', '590', 1],\r\n    ['Saint Helena', 'sh', '290'],\r\n    ['Saint Kitts and Nevis', 'kn', '1869'],\r\n    ['Saint Lucia', 'lc', '1758'],\r\n    ['Saint Martin (Saint-Martin (partie franÃ§aise))', 'mf', '590', 2],\r\n    ['Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)', 'pm', '508'],\r\n    ['Saint Vincent and the Grenadines', 'vc', '1784'],\r\n    ['Samoa', 'ws', '685'],\r\n    ['San Marino', 'sm', '378'],\r\n    ['SÃ£o TomÃ© and PrÃ­ncipe (SÃ£o TomÃ© e PrÃ­ncipe)', 'st', '239'],\r\n    ['Saudi Arabia (â«Ø§ÙÙÙÙÙØ© Ø§ÙØ¹Ø±Ø¨ÙØ© Ø§ÙØ³Ø¹ÙØ¯ÙØ©â¬â)', 'sa', '966'],\r\n    ['Senegal (SÃ©nÃ©gal)', 'sn', '221'],\r\n    ['Serbia (Ð¡ÑÐ±Ð¸ÑÐ°)', 'rs', '381'],\r\n    ['Seychelles', 'sc', '248'],\r\n    ['Sierra Leone', 'sl', '232'],\r\n    ['Singapore', 'sg', '65'],\r\n    ['Sint Maarten', 'sx', '1721'],\r\n    ['Slovakia (Slovensko)', 'sk', '421'],\r\n    ['Slovenia (Slovenija)', 'si', '386'],\r\n    ['Solomon Islands', 'sb', '677'],\r\n    ['Somalia (Soomaaliya)', 'so', '252'],\r\n    ['South Africa', 'za', '27'],\r\n    ['South Korea (ëíë¯¼êµ­)', 'kr', '82'],\r\n    ['South Sudan (â«Ø¬ÙÙØ¨ Ø§ÙØ³ÙØ¯Ø§Ùâ¬â)', 'ss', '211'],\r\n    ['Spain (EspaÃ±a)', 'es', '34'],\r\n    ['Sri Lanka (à·à·âà¶»à· à¶½à¶à¶à·à·)', 'lk', '94'],\r\n    ['Sudan (â«Ø§ÙØ³ÙØ¯Ø§Ùâ¬â)', 'sd', '249'],\r\n    ['Suriname', 'sr', '597'],\r\n    ['Svalbard and Jan Mayen', 'sj', '47', 1],\r\n    ['Swaziland', 'sz', '268'],\r\n    ['Sweden (Sverige)', 'se', '46'],\r\n    ['Switzerland (Schweiz)', 'ch', '41'],\r\n    ['Syria (â«Ø³ÙØ±ÙØ§â¬â)', 'sy', '963'],\r\n    ['Taiwan (å°ç£)', 'tw', '886'],\r\n    ['Tajikistan', 'tj', '992'],\r\n    ['Tanzania', 'tz', '255'],\r\n    ['Thailand (à¹à¸à¸¢)', 'th', '66'],\r\n    ['Timor-Leste', 'tl', '670'],\r\n    ['Togo', 'tg', '228'],\r\n    ['Tokelau', 'tk', '690'],\r\n    ['Tonga', 'to', '676'],\r\n    ['Trinidad and Tobago', 'tt', '1868'],\r\n    ['Tunisia (â«ØªÙÙØ³â¬â)', 'tn', '216'],\r\n    ['Turkey (TÃ¼rkiye)', 'tr', '90'],\r\n    ['Turkmenistan', 'tm', '993'],\r\n    ['Turks and Caicos Islands', 'tc', '1649'],\r\n    ['Tuvalu', 'tv', '688'],\r\n    ['U.S. Virgin Islands', 'vi', '1340'],\r\n    ['Uganda', 'ug', '256'],\r\n    ['Ukraine (Ð£ÐºÑÐ°ÑÐ½Ð°)', 'ua', '380'],\r\n    ['United Arab Emirates (â«Ø§ÙØ¥ÙØ§Ø±Ø§Øª Ø§ÙØ¹Ø±Ø¨ÙØ© Ø§ÙÙØªØ­Ø¯Ø©â¬â)', 'ae', '971'],\r\n    ['United Kingdom', 'gb', '44', 0],\r\n    ['United States', 'us', '1', 0],\r\n    ['Uruguay', 'uy', '598'],\r\n    ['Uzbekistan (OÊ»zbekiston)', 'uz', '998'],\r\n    ['Vanuatu', 'vu', '678'],\r\n    ['Vatican City (CittÃ  del Vaticano)', 'va', '39', 1],\r\n    ['Venezuela', 've', '58'],\r\n    ['Vietnam (Viá»t Nam)', 'vn', '84'],\r\n    ['Wallis and Futuna (Wallis-et-Futuna)', 'wf', '681'],\r\n    ['Western Sahara (â«Ø§ÙØµØ­Ø±Ø§Ø¡ Ø§ÙØºØ±Ø¨ÙØ©â¬â)', 'eh', '212', 1],\r\n    ['Yemen (â«Ø§ÙÙÙÙâ¬â)', 'ye', '967'],\r\n    ['Zambia', 'zm', '260'],\r\n    ['Zimbabwe', 'zw', '263'],\r\n    ['Ãland Islands', 'ax', '358', 1]];\r\n}\r\n\r\nexport const Examples: any = {\r\n  '001': '001',\r\n  AC: '40123',\r\n  AD: '312345',\r\n  AE: '501234567',\r\n  AF: '701234567',\r\n  AG: '2684641234',\r\n  AI: '2642351234',\r\n  AL: '662123456',\r\n  AM: '77123456',\r\n  AO: '923123456',\r\n  AR: '91123456789',\r\n  AS: '6847331234',\r\n  AT: '664123456',\r\n  AU: '412345678',\r\n  AW: '5601234',\r\n  AX: '412345678',\r\n  AZ: '401234567',\r\n  BA: '61123456',\r\n  BB: '2462501234',\r\n  BD: '1812345678',\r\n  BE: '470123456',\r\n  BF: '70123456',\r\n  BG: '48123456',\r\n  BH: '36001234',\r\n  BI: '79561234',\r\n  BJ: '90011234',\r\n  BL: '690001234',\r\n  BM: '4413701234',\r\n  BN: '7123456',\r\n  BO: '71234567',\r\n  BQ: '3181234',\r\n  BR: '11961234567',\r\n  BS: '2423591234',\r\n  BT: '17123456',\r\n  BW: '71123456',\r\n  BY: '294911911',\r\n  BZ: '6221234',\r\n  CA: '5062345678',\r\n  CC: '412345678',\r\n  CD: '991234567',\r\n  CF: '70012345',\r\n  CG: '061234567',\r\n  CH: '781234567',\r\n  CI: '01234567',\r\n  CK: '71234',\r\n  CL: '221234567',\r\n  CM: '671234567',\r\n  CN: '13123456789',\r\n  CO: '3211234567',\r\n  CR: '83123456',\r\n  CU: '51234567',\r\n  CV: '9911234',\r\n  CW: '95181234',\r\n  CX: '412345678',\r\n  CY: '96123456',\r\n  CZ: '601123456',\r\n  DE: '15123456789',\r\n  DJ: '77831001',\r\n  DK: '32123456',\r\n  DM: '7672251234',\r\n  DO: '8092345678',\r\n  DZ: '551234567',\r\n  EC: '991234567',\r\n  EE: '51234567',\r\n  EG: '1001234567',\r\n  EH: '650123456',\r\n  ER: '7123456',\r\n  ES: '612345678',\r\n  ET: '911234567',\r\n  FI: '412345678',\r\n  FJ: '7012345',\r\n  FK: '51234',\r\n  FM: '3501234',\r\n  FO: '211234',\r\n  FR: '612345678',\r\n  GA: '06031234',\r\n  GB: '7400123456',\r\n  GD: '4734031234',\r\n  GE: '555123456',\r\n  GF: '694201234',\r\n  GG: '7781123456',\r\n  GH: '231234567',\r\n  GI: '57123456',\r\n  GL: '221234',\r\n  GM: '3012345',\r\n  GN: '601123456',\r\n  GP: '690001234',\r\n  GQ: '222123456',\r\n  GR: '6912345678',\r\n  GT: '51234567',\r\n  GU: '6713001234',\r\n  GW: '955012345',\r\n  GY: '6091234',\r\n  HK: '51234567',\r\n  HN: '91234567',\r\n  HR: '921234567',\r\n  HT: '34101234',\r\n  HU: '201234567',\r\n  ID: '812345678',\r\n  IE: '850123456',\r\n  IL: '502345678',\r\n  IM: '7924123456',\r\n  IN: '8123456789',\r\n  IO: '3801234',\r\n  IQ: '7912345678',\r\n  IR: '9123456789',\r\n  IS: '6111234',\r\n  IT: '3123456789',\r\n  JE: '7797712345',\r\n  JM: '8762101234',\r\n  JO: '790123456',\r\n  JP: '9012345678',\r\n  KE: '712123456',\r\n  KG: '700123456',\r\n  KH: '91234567',\r\n  KI: '72001234',\r\n  KM: '3212345',\r\n  KN: '8697652917',\r\n  KP: '1921234567',\r\n  KR: '1000000000',\r\n  KW: '50012345',\r\n  KY: '3453231234',\r\n  KZ: '7710009998',\r\n  LA: '2023123456',\r\n  LB: '71123456',\r\n  LC: '7582845678',\r\n  LI: '660234567',\r\n  LK: '712345678',\r\n  LR: '770123456',\r\n  LS: '50123456',\r\n  LT: '61234567',\r\n  LU: '628123456',\r\n  LV: '21234567',\r\n  LY: '912345678',\r\n  MA: '650123456',\r\n  MC: '612345678',\r\n  MD: '62112345',\r\n  ME: '67622901',\r\n  MF: '690001234',\r\n  MG: '321234567',\r\n  MH: '2351234',\r\n  MK: '72345678',\r\n  ML: '65012345',\r\n  MM: '92123456',\r\n  MN: '88123456',\r\n  MO: '66123456',\r\n  MP: '6702345678',\r\n  MQ: '696201234',\r\n  MR: '22123456',\r\n  MS: '6644923456',\r\n  MT: '96961234',\r\n  MU: '52512345',\r\n  MV: '7712345',\r\n  MW: '991234567',\r\n  MX: '12221234567',\r\n  MY: '123456789',\r\n  MZ: '821234567',\r\n  NA: '811234567',\r\n  NC: '751234',\r\n  NE: '93123456',\r\n  NF: '381234',\r\n  NG: '8021234567',\r\n  NI: '81234567',\r\n  NL: '612345678',\r\n  NO: '40612345',\r\n  NP: '9841234567',\r\n  NR: '5551234',\r\n  NU: '8884012',\r\n  NZ: '211234567',\r\n  OM: '92123456',\r\n  PA: '61234567',\r\n  PE: '912345678',\r\n  PF: '87123456',\r\n  PG: '70123456',\r\n  PH: '9051234567',\r\n  PK: '3012345678',\r\n  PL: '512345678',\r\n  PM: '551234',\r\n  PR: '7872345678',\r\n  PS: '599123456',\r\n  PT: '912345678',\r\n  PW: '6201234',\r\n  PY: '961456789',\r\n  QA: '33123456',\r\n  RE: '692123456',\r\n  RO: '712034567',\r\n  RS: '601234567',\r\n  RU: '9123456789',\r\n  RW: '720123456',\r\n  SA: '512345678',\r\n  SB: '7421234',\r\n  SC: '2510123',\r\n  SD: '911231234',\r\n  SE: '701234567',\r\n  SG: '81234567',\r\n  SH: '51234',\r\n  SI: '31234567',\r\n  SJ: '41234567',\r\n  SK: '912123456',\r\n  SL: '25123456',\r\n  SM: '66661212',\r\n  SN: '701234567',\r\n  SO: '71123456',\r\n  SR: '7412345',\r\n  SS: '977123456',\r\n  ST: '9812345',\r\n  SV: '70123456',\r\n  SX: '7215205678',\r\n  SY: '944567890',\r\n  SZ: '76123456',\r\n  TA: '8999',\r\n  TC: '6492311234',\r\n  TD: '63012345',\r\n  TG: '90112345',\r\n  TH: '812345678',\r\n  TJ: '917123456',\r\n  TK: '7290',\r\n  TL: '77212345',\r\n  TM: '66123456',\r\n  TN: '20123456',\r\n  TO: '7715123',\r\n  TR: '5012345678',\r\n  TT: '8682911234',\r\n  TV: '901234',\r\n  TW: '912345678',\r\n  TZ: '621234567',\r\n  UA: '501234567',\r\n  UG: '712345678',\r\n  US: '2015550123',\r\n  UY: '94231234',\r\n  UZ: '912345678',\r\n  VA: '3123456789',\r\n  VC: '7844301234',\r\n  VE: '4121234567',\r\n  VG: '2843001234',\r\n  VI: '3406421234',\r\n  VN: '912345678',\r\n  VU: '5912345',\r\n  WF: '501234',\r\n  WS: '7212345',\r\n  XK: '43201234',\r\n  YE: '712345678',\r\n  YT: '639012345',\r\n  ZA: '711234567',\r\n  ZM: '955123456',\r\n  ZW: '712345678'\r\n};\r\n","import {FormControl} from '@angular/forms';\r\nimport {parsePhoneNumber, PhoneNumber} from 'libphonenumber-js';\r\n\r\nexport const phoneNumberValidator = (control: FormControl) => {\r\n  const error = {validatePhoneNumber: true};\r\n  let numberInstance: PhoneNumber;\r\n  if (control.value) {\r\n    try {\r\n      numberInstance = parsePhoneNumber(control.value);\r\n    } catch (e) {\r\n      control.setValue(null);\r\n      return error;\r\n    }\r\n\r\n    if (numberInstance && !numberInstance.isValid()) {\r\n      control.setValue(null);\r\n      if (!control.touched) {\r\n        control.markAsTouched();\r\n      }\r\n      return error;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","import {MatFormFieldControl} from '@angular/material/form-field';\r\nimport {\r\n  Component,\r\n  DoCheck,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n  ViewChild,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport {FormGroupDirective, NG_VALIDATORS, NgControl, NgForm} from '@angular/forms';\r\nimport {CountryCode, Examples} from './data/country-code';\r\nimport {phoneNumberValidator} from './ngx-mat-intl-tel-input.validator';\r\nimport {Country} from './model/country.model';\r\nimport {PhoneNumberFormat} from './model/phone-number-format.model';\r\nimport {AsYouType, CountryCode as CC, E164Number, getExampleNumber, parsePhoneNumberFromString, PhoneNumber} from 'libphonenumber-js';\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Subject} from 'rxjs';\r\nimport {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {CanUpdateErrorState, CanUpdateErrorStateCtor, ErrorStateMatcher, mixinErrorState} from '@angular/material/core';\r\nimport {MatMenu} from '@angular/material/menu';\r\n\r\nclass NgxMatIntlTelInputBase {\r\n  // tslint:disable-next-line:variable-name\r\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\r\n              // tslint:disable-next-line:variable-name\r\n              public _parentForm: NgForm,\r\n              // tslint:disable-next-line:variable-name\r\n              public _parentFormGroup: FormGroupDirective,\r\n              /** @docs-private */\r\n              public ngControl: NgControl) {\r\n  }\r\n}\r\n\r\n// tslint:disable-next-line:variable-name\r\nconst _NgxMatIntlTelInputMixinBase: CanUpdateErrorStateCtor & typeof NgxMatIntlTelInputBase =\r\n  mixinErrorState(NgxMatIntlTelInputBase);\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'ngx-mat-intl-tel-input',\r\n  templateUrl: './ngx-mat-intl-tel-input.component.html',\r\n  styleUrls: ['./ngx-mat-intl-tel-input.component.css'],\r\n  providers: [\r\n    CountryCode,\r\n    {provide: MatFormFieldControl, useExisting: NgxMatIntlTelInputComponent},\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useValue: phoneNumberValidator,\r\n      multi: true,\r\n    }\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class NgxMatIntlTelInputComponent extends _NgxMatIntlTelInputMixinBase\r\n  implements OnInit, OnDestroy, DoCheck, CanUpdateErrorState, MatFormFieldControl<any> {\r\n  static nextId = 0;\r\n\r\n  @Input() preferredCountries: Array<string> = [];\r\n  @Input() enablePlaceholder = true;\r\n  @Input() inputPlaceholder: string;\r\n  @Input() cssClass;\r\n  @Input() name: string;\r\n  @Input() onlyCountries: Array<string> = [];\r\n  @Input() errorStateMatcher: ErrorStateMatcher;\r\n  @Input() enableSearch = false;\r\n  @Input() searchPlaceholder: string;\r\n\r\n  @Input()\r\n  get format(): PhoneNumberFormat {\r\n    return this._format;\r\n  }\r\n\r\n  set format(value: PhoneNumberFormat) {\r\n    this._format = value;\r\n    this.phoneNumber = this.formattedPhoneNumber;\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  @ViewChild(MatMenu) matMenu: MatMenu;\r\n  // tslint:disable-next-line:variable-name\r\n  private _placeholder: string;\r\n  // tslint:disable-next-line:variable-name\r\n  private _required = false;\r\n  // tslint:disable-next-line:variable-name\r\n  private _disabled = false;\r\n  stateChanges = new Subject<void>();\r\n  focused = false;\r\n  @HostBinding() id = `ngx-mat-intl-tel-input-${NgxMatIntlTelInputComponent.nextId++}`;\r\n  describedBy = '';\r\n  phoneNumber: E164Number = '';\r\n  allCountries: Array<Country> = [];\r\n  preferredCountriesInDropDown: Array<Country> = [];\r\n  selectedCountry: Country;\r\n  numberInstance: PhoneNumber;\r\n  value;\r\n  searchCriteria: string;\r\n  @Output()\r\n  countryChanged: EventEmitter<Country> = new EventEmitter<Country>();\r\n\r\n  private previousFormattedNumber: string;\r\n  // tslint:disable-next-line:variable-name\r\n  private _format: PhoneNumberFormat = 'default';\r\n\r\n  static getPhoneNumberPlaceHolder(countryISOCode: any): string {\r\n    try {\r\n      return getExampleNumber(countryISOCode, Examples).number.toString();\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  }\r\n\r\n  onTouched = () => {\r\n  };\r\n\r\n  propagateChange = (_: any) => {\r\n  };\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    private countryCodeData: CountryCode,\r\n    private fm: FocusMonitor,\r\n    private elRef: ElementRef<HTMLElement>,\r\n    @Optional() @Self() public ngControl: NgControl,\r\n    // tslint:disable-next-line:variable-name\r\n    @Optional() _parentForm: NgForm,\r\n    // tslint:disable-next-line:variable-name\r\n    @Optional() _parentFormGroup: FormGroupDirective,\r\n    // tslint:disable-next-line:variable-name\r\n    _defaultErrorStateMatcher: ErrorStateMatcher,\r\n  ) {\r\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\r\n    fm.monitor(elRef, true).subscribe(origin => {\r\n      if (this.focused && !origin) {\r\n        this.onTouched();\r\n      }\r\n      this.focused = !!origin;\r\n      this.stateChanges.next();\r\n    });\r\n    this.fetchCountryData();\r\n    if (this.ngControl != null) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.searchPlaceholder) {\r\n      this.searchPlaceholder = 'Search ...';\r\n    }\r\n    if (this.preferredCountries.length) {\r\n      this.preferredCountries.forEach(iso2 => {\r\n        const preferredCountry = this.allCountries.filter((c) => {\r\n          return c.iso2 === iso2;\r\n        }).shift();\r\n        this.preferredCountriesInDropDown.push(preferredCountry);\r\n      });\r\n    }\r\n    if (this.onlyCountries.length) {\r\n      this.allCountries = this.allCountries.filter(c => this.onlyCountries.includes(c.iso2));\r\n    }\r\n    if (this.numberInstance && this.numberInstance.country) {\r\n      // If an existing number is present, we use it to determine selectedCountry\r\n      this.selectedCountry = this.getCountry(this.numberInstance.country);\r\n    } else {\r\n      if (this.preferredCountriesInDropDown.length) {\r\n        this.selectedCountry = this.preferredCountriesInDropDown[0];\r\n      } else {\r\n        this.selectedCountry = this.allCountries[0];\r\n      }\r\n    }\r\n    this.countryChanged.emit(this.selectedCountry);\r\n    this._changeDetectorRef.markForCheck();\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if (this.ngControl) {\r\n      this.updateErrorState();\r\n    }\r\n  }\r\n\r\n  public onPhoneNumberChange(): void {\r\n    try {\r\n      this.numberInstance = parsePhoneNumberFromString(this.phoneNumber.toString(), this.selectedCountry.iso2.toUpperCase() as CC);\r\n      this.formatAsYouTypeIfEnabled();\r\n      this.value = this.numberInstance.number;\r\n      if (this.numberInstance && this.numberInstance.isValid()) {\r\n        if (this.phoneNumber !== this.formattedPhoneNumber) {\r\n          this.phoneNumber = this.formattedPhoneNumber;\r\n        }\r\n        if (this.selectedCountry.iso2 !== this.numberInstance.country) {\r\n          this.selectedCountry = this.getCountry(this.numberInstance.country);\r\n          this.countryChanged.emit(this.selectedCountry);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      // if no possible numbers are there,\r\n      // then the full number is passed so that validator could be triggered and proper error could be shown\r\n      this.value = this.phoneNumber.toString();\r\n    }\r\n    this.propagateChange(this.value);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  public onCountrySelect(country: Country, el): void {\r\n    if (this.phoneNumber) {\r\n      this.phoneNumber = this.numberInstance.nationalNumber;\r\n    }\r\n    this.selectedCountry = country;\r\n    this.countryChanged.emit(this.selectedCountry);\r\n    this.onPhoneNumberChange();\r\n    el.focus();\r\n  }\r\n\r\n  public getCountry(code) {\r\n    return this.allCountries.find(c => c.iso2 === code.toLowerCase()) || {\r\n      name: 'UN',\r\n      iso2: 'UN',\r\n      dialCode: undefined,\r\n      priority: 0,\r\n      areaCodes: undefined,\r\n      flagClass: 'UN',\r\n      placeHolder: ''\r\n    };\r\n  }\r\n\r\n  public onInputKeyPress(event): void {\r\n    const pattern = /[0-9+\\- ]/;\r\n    if (!pattern.test(event.key)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  protected fetchCountryData(): void {\r\n    this.countryCodeData.allCountries.forEach(c => {\r\n      const country: Country = {\r\n        name: c[0].toString(),\r\n        iso2: c[1].toString(),\r\n        dialCode: c[2].toString(),\r\n        priority: +c[3] || 0,\r\n        areaCodes: c[4] as string[] || undefined,\r\n        flagClass: c[1].toString().toUpperCase(),\r\n        placeHolder: ''\r\n      };\r\n\r\n      if (this.enablePlaceholder) {\r\n        country.placeHolder = NgxMatIntlTelInputComponent.getPhoneNumberPlaceHolder(country.iso2.toUpperCase());\r\n      }\r\n\r\n      this.allCountries.push(country);\r\n    });\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this._changeDetectorRef.markForCheck();\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    if (value) {\r\n      this.numberInstance = parsePhoneNumberFromString(value);\r\n      if (this.numberInstance) {\r\n        const countryCode = this.numberInstance.country;\r\n        this.phoneNumber = this.formattedPhoneNumber;\r\n        if (!countryCode) {\r\n          return;\r\n        }\r\n        setTimeout(() => {\r\n          this.selectedCountry = this.getCountry(countryCode);\r\n          if (this.selectedCountry.dialCode && !this.preferredCountries.includes(this.selectedCountry.iso2)) {\r\n            this.preferredCountriesInDropDown.push(this.selectedCountry);\r\n          }\r\n          this.countryChanged.emit(this.selectedCountry);\r\n\r\n          // Initial value is set\r\n          this._changeDetectorRef.markForCheck();\r\n          this.stateChanges.next();\r\n        }, 1);\r\n      } else {\r\n        this.phoneNumber = value;\r\n      }\r\n    }\r\n\r\n    // Value is set from outside using setValue()\r\n    this._changeDetectorRef.markForCheck();\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  get empty() {\r\n    return !this.phoneNumber;\r\n  }\r\n\r\n  @HostBinding('class.ngx-floating')\r\n  get shouldLabelFloat() {\r\n    return this.focused || !this.empty;\r\n  }\r\n\r\n  @Input()\r\n  get placeholder(): string {\r\n    return this._placeholder;\r\n  }\r\n\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  @Input()\r\n  get required(): boolean {\r\n    return this._required;\r\n  }\r\n\r\n  set required(value: boolean) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]) {\r\n    this.describedBy = ids.join(' ');\r\n  }\r\n\r\n  onContainerClick(event: MouseEvent) {\r\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\r\n      // tslint:disable-next-line:no-non-null-assertion\r\n      this.elRef.nativeElement.querySelector('input')!.focus();\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.phoneNumber = '';\r\n    this.propagateChange(null);\r\n\r\n    this._changeDetectorRef.markForCheck();\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n    this.fm.stopMonitoring(this.elRef);\r\n  }\r\n\r\n  private get formattedPhoneNumber(): string {\r\n    if (!this.numberInstance) {\r\n      return this.phoneNumber.toString();\r\n    }\r\n    switch (this.format) {\r\n      case 'national':\r\n        return this.numberInstance.formatNational();\r\n      case 'international':\r\n        return this.numberInstance.formatInternational();\r\n      default:\r\n        return this.numberInstance.nationalNumber.toString();\r\n    }\r\n  }\r\n\r\n  private formatAsYouTypeIfEnabled(): void {\r\n    if (this.format === 'default') {\r\n      return;\r\n    }\r\n    const asYouType: AsYouType = new AsYouType(this.selectedCountry.iso2.toUpperCase() as CC);\r\n    // To avoid caret positioning we apply formatting only if the caret is at the end:\r\n    if (this.phoneNumber.toString().startsWith(this.previousFormattedNumber || '')) {\r\n      this.phoneNumber = asYouType.input(this.phoneNumber.toString());\r\n    }\r\n    this.previousFormattedNumber = this.phoneNumber.toString();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { Country } from './model/country.model';\r\n\r\n@Pipe({\r\n  name: 'search'\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n\r\n  // country | search:'searchCriteria'\r\n  transform(country: Country, searchCriteria?: string): boolean {\r\n    if (!searchCriteria || searchCriteria === '') {\r\n      return true;\r\n    }\r\n\r\n    return `${country.name}+${country.dialCode}`\r\n      .toLowerCase()\r\n      .includes(\r\n        searchCriteria.toLowerCase()\r\n      );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { NgxMatIntlTelInputComponent } from './ngx-mat-intl-tel-input.component';\r\nimport { SearchPipe } from './search.pipe';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgxMatIntlTelInputComponent,\r\n    SearchPipe,\r\n  ],\r\n  imports:[\r\n    CommonModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [NgxMatIntlTelInputComponent]\r\n})\r\nexport class NgxMatIntlTelInputModule { }\r\n"]}